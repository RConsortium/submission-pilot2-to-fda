# Generated by pkglite: do not edit by hand
# Use pkglite::unpack() to restore the packages

Package: pilot2wrappers
File: .Rbuildignore
Format: text
Content:
  ^renv$
  ^renv\.lock$
  ^.*\.Rproj$
  ^\.Rproj\.user$
  ^pilot1wrappers\.Rcheck$
  ^pilot1wrappers.*\.tar\.gz$
  ^pilot1wrappers.*\.tgz$
  ^_pkgdown\.yml$
  ^docs$
  ^pkgdown$
  ^LICENSE.md$
  ^output$
  ^readme.md$
  ^adam$
  ^vignettes$
  ^\.github$
  ^data-raw$
  dev_history.R
  ^dev$
  $run_dev.*
  ^.devcontainer$
  ^app\.R$
  ^rsconnect$
  ^LICENSE\.md$
  ^datasets$

Package: pilot2wrappers
File: .Renviron
Format: text
Content:
  RENV_PATHS_CELLAR="renv/cellar"

Package: pilot2wrappers
File: .Rprofile
Format: text
Content:
  source("renv/activate.R")

Package: pilot2wrappers
File: DESCRIPTION
Format: text
Content:
  Package: pilot2wrappers
  Type: Package
  Title: R Consortium R Submission Pilot 2
  Version: 0.9.0
  Authors@R: c(
          person("Eric", "Nantz", email = "theRcast@gmail.com", role = c("aut", "cre")),
          person("Yilong", "Zhang", role = c("aut")),
          person("Heng", "Wang", role = c("aut")),
          person("Gregory", "Chen", role = c("aut")),
          person("Eli", "Miller", role = c("aut")),
          person("Ning", "Leng", role = c("aut")),
          person("copyright", role = c("cph"))
         )
  Description: Insert Package Description. 
  Depends: R (>= 4.1.0)
  License: GPL (>= 3)
  Imports: 
      config (>= 0.3.1),
      golem (>= 0.3.1),
      teal,
      teal.data,
      shiny (>= 1.7.1),
      rtables,
      haven,
      dplyr,
      Tplyr,
      tidyr,
      glue,
      stringr,
      huxtable,
      ggplot2,
      cowplot,
      visR,
      emmeans,
      reactable,
      magrittr,
      tibble,
      utils,
      htmltools,
      pkgload,
      tippy,
      markdown,
      purrr
  Suggests: 
      devtools,
      testthat,
      knitr,
      rmarkdown,
      pkglite
  Encoding: UTF-8
  LazyData: true
  Roxygen: list(markdown = TRUE)  
  Rmarkdwon: echo = TRUE
  RoxygenNote: 7.1.2
  VignetteBuilder: knitr

Package: pilot2wrappers
File: NAMESPACE
Format: text
Content:
  # Generated by roxygen2: do not edit by hand
  
  export("%>%")
  export(efficacy_models)
  export(fmt_ci)
  export(fmt_est)
  export(fmt_num)
  export(fmt_pval)
  export(nest_rowlabels)
  export(num_fmt)
  export(pad_row)
  export(run_app)
  export(set_data_path)
  export(tooltip_text)
  import(Tplyr)
  import(dplyr)
  import(ggplot2)
  import(rtables)
  import(tippy)
  importFrom(dplyr,across)
  importFrom(dplyr,arrange)
  importFrom(dplyr,bind_rows)
  importFrom(dplyr,case_when)
  importFrom(dplyr,distinct)
  importFrom(dplyr,filter)
  importFrom(dplyr,group_by)
  importFrom(dplyr,mutate)
  importFrom(dplyr,n)
  importFrom(dplyr,rename)
  importFrom(dplyr,rowwise)
  importFrom(dplyr,select)
  importFrom(dplyr,starts_with)
  importFrom(dplyr,summarise)
  importFrom(glue,glue)
  importFrom(golem,with_golem_options)
  importFrom(graphics,pairs)
  importFrom(magrittr,"%>%")
  importFrom(reactable,colDef)
  importFrom(reactable,colGroup)
  importFrom(reactable,reactable)
  importFrom(reactable,renderReactable)
  importFrom(shiny,NS)
  importFrom(shiny,column)
  importFrom(shiny,fluidPage)
  importFrom(shiny,fluidRow)
  importFrom(shiny,h4)
  importFrom(shiny,h6)
  importFrom(shiny,plotOutput)
  importFrom(shiny,reactive)
  importFrom(shiny,renderPlot)
  importFrom(shiny,renderUI)
  importFrom(shiny,shinyApp)
  importFrom(shiny,tagList)
  importFrom(shiny,tags)
  importFrom(shiny,uiOutput)
  importFrom(stats,confint)
  importFrom(stats,drop1)
  importFrom(stats,lm)
  importFrom(stats,median)
  importFrom(stats,sd)
  importFrom(stringr,str_pad)
  importFrom(teal,init)
  importFrom(teal,module)
  importFrom(teal,modules)
  importFrom(tidyr,pivot_longer)
  importFrom(tidyr,replace_na)

Package: pilot2wrappers
File: NEWS.md
Format: text
Content:
  # pilot2wrappers 0.9.0
  
  - Fix RMSE calculation in efficacy table to match result in Pilot 1
  
  # pilot2wrappers 0.8.0
  
  - Switch to `adlbc` as source for visit completion to remain consistent with efficacy analysis
  - Fix incorrect sample sizes for baseline visit in primary analysis table
  - Fix misc typos for ADRG
  
  # pilot2wrappers 0.7.0
  
  - Include analysis model specification as a footnote in the efficacy table (#55)
  - Add new frequency table of visit completion by treatment group (#53)
  - Revise title for efficacy table (#52)
  - Fix incorrect header order for primary table (#51)
  - Ensure decimal places for rounding numeric results in demographics table is consistent with Pilot 1 programming (#54)
  
  # pilot2wrappers 0.6.0
  
  - Remove Teal filters for every module except KM-plot to address FDA reviewer feedback
  - Increase risk table and plot label font sizes
  - Add bootstrap alert box with subgroup disclaimer in KM-plot module
  
  # pilot2wrappers 0.5.0
  
  - Hide p-values when a data filter is applied, and display only when no filters are applied. This addresses comments from FDA reviewers after they saw a preview of the application.
  - Add a new description in the App Information module regarding display of p-values.
  - Add another footnote to the primary and efficacy table displays regarding the p-value display.
  - Increase plot window height for KM module, improving readability
  
  # pilot2wrappers 0.4.0
  
  - Ensure column width of efficacy table's 95% CI header is wide enough to fit in a single row
  - Add missing footnotes to primary table
  - Add new vignettes for ADRG as a [Quarto](https://quarto.org/) document (with HTML and PDF output) and cover letter as a R-Markdown document using the [`{pagedown}`](https://pagedown.rbind.io/#letter)  package.
  
  # pilot2wrappers 0.3.0
  
  - Enable support for using `{pkglite}` to create package bundle compliant with ECTD submission transfer standards
  - Fix display of tooltips in select modules by using the `{tippy}` R package
  - Add helper function `set_data_path` for the user to set the directory path to `.xpt` data files loaded into the application
  
  # pilot2wrappers 0.2.0
  
  - Convert Shiny application to a package structure using [`{golem}`](https://thinkr-open.github.io/golem).
  - Incorporate the open-source [`{teal}`](https://insightsengineering.github.io/teal/main) package inside application to provide dynamic filters in all modules
  
  # pilot2wrappers 0.1.0
  
  - Initial version.
  - Added a `NEWS.md` file to track changes to the package.

Package: pilot2wrappers
File: README.md
Format: text
Content:
  ---
  output:
    html_document: default
    pdf_document: default
  ---
  <!-- badges: start -->
  
  [![R-CMD-check](https://github.com/RConsortium/submissions-pilot2/workflows/R-CMD-check/badge.svg)](https://rconsortium.github.io/submissions-pilot2/)
  <!-- badges: end -->
  
  ## Overview
  
  The objective of the R Consortium R submission Pilot 2 Project is to test the concept that a Shiny application created with the R-language can be successfully bundled into a submission package and transferred successfully to FDA reviewers. The application was built using the source data sets and analyses contained in the R submission Pilot 1 Project, with materials available on the [RConsortium/submissions-pilot1](https://github.com/RConsortium/submissions-pilot1) repository, All submission materials and communications from this pilot are publicly available, with the aim of providing a working example for future R language based FDA submissions. This is a FDA-industry collaboration through the non-profit organization R consortium.
  
  While the intent of the project is to enable execution of the Shiny application in a reviewer's local R environment, a deployed version of the application is available in open access through the Shinyapps.io service at [rconsortium.shinyapps.io/submissions-pilot2](https://rconsortium.shinyapps.io/submissions-pilot2/).
  
  The [working group website](https://rconsortium.github.io/submissions-wg/).
  
  The [RConsortium/submissions-pilot2](https://github.com/RConsortium/submissions-pilot2) demonstrates an approach to organize a Shiny application as an R package.
  
  The [RConsortium/submissions-pilot2-to-fda](https://github.com/RConsortium/submissions-pilot2-to-fda)
  repo demonstrates the eCTD submission package based on the [RConsortium/submissions-pilot2](https://github.com/RConsortium/submissions-pilot2) repo.  
  
  ## Meeting Minutes
  
  [Repo wiki](https://github.com/RConsortium/submissions-pilot2/wiki)
  
  ## Installing `teal` :
  
  Follow the link [here](https://github.com/insightsengineering/depository#readme)
  
  ## Running application
  
  * Clone this repository to your local machine
  * Open the project within RStudio, and run `renv::restore()` if prompted to restore the `{renv}` package library
  * Open the `app.R` script and run the application within RStudio by clicking the Run App button

Package: pilot2wrappers
File: inst/app/docs/about.md
Format: text
Content:
  # Introduction
  
  This application is intended for a pilot submission to the FDA composing of a Shiny application, as part of the [R Submissions Working Group](https://rconsortium.github.io/submissions-wg/) Pilot 2. The data sets and results displayed in the application originate from the [Pilot 1 project](https://rconsortium.github.io/submissions-wg/pilot-overall.html#pilot-1---common-analyses). Below is a brief description of the rest of the application:
  
  ### Demographic Table
  
  In this interface, summary statistics associated with baseline clinical characteristics and other demographic factors is shown.
  
  ### KM-Plot for TTDE
  
  A Kaplan-Meier (KM) plot of the Time to First Dermatologic Event (TTDE) with strata defined by treatment group is displayed along with an informative risk set table across time.
  
  ### Primary Table
  
  A summary table of the primary efficacy analysis is shown for each of the time points of assessment (baseline and week 24) comparing each treatment group. The primary efficacy variable (change from baseline in ADAS Cog (11)) was analyzed using an Analysis of Covariance (ANCOVA) model with treatment and baseline value as covariates, comparing Placebo to Xanomeline High Dose.
  
  ### Efficacy Table
  
  A summary table of an additional efficacy analysis is shown for baseline and week 20. The efficacy variable (Glucose) was analzying using ANCOVA model with treatment and baseline value as covariates, comparing Placebo to Xanomeline High Dose.
  
  ### Visit Completion
  
  A summary table of the number of patients remaining in the treatment period for each scheduled visit from baseline to week 24.

Package: pilot2wrappers
File: inst/golem-config.yml
Format: text
Content:
  default:
    golem_name: pilot2wrappers
    golem_version: 0.9.0
    app_prod: no
    adam_path: "datasets/adam"
  production:
    app_prod: yes
  dev:
    golem_wd: !expr here::here()

Package: pilot2wrappers
File: inst/pkgdown/assets/readme.txt
Format: text
Content:
  do not delete. Paceholder for pkgdown

Package: pilot2wrappers
File: inst/pkgdown/templates/readme.txt
Format: text
Content:
  do not delete. Paceholder for pkgdown

Package: pilot2wrappers
File: inst/startup.R
Format: text
Content:
  # Project Level Setup
  R_version <- "4.2.0"																                  # set up project R version
  snapshot  <- "2022-09-01" 									                          # set up snapshot date
  teal_snapshot <- "2022-06-09"
  repos <- c(
    paste0("https://packagemanager.rstudio.com/cran/", snapshot), 
    paste0("https://insightsengineering.github.io/depository/", teal_snapshot)  # set up repository based on snapshot
  )
  
  home      <- normalizePath(".") # set up home directory
  while(! "DESCRIPTION" %in% list.files(home)){
          home <- dirname(home)
  }
  
  # A&R folder path (Do not edit information below)
  path <- list(home = "")
  
  path <- lapply(path, function(x) file.path(home, x))
  
  # Define repo URL for project specific package installation
  options(repos = repos)
  
  # Check R Version
  if(paste(R.version$major, R.version$minor, sep = ".") != R_version & interactive()){
   stop("The current R version is not the same with the current project in ", R_version)
  }
  
  # Repository
  message("Current project R package repository:")
  message(paste0("    ", getOption("repos")))
  message(" ")
  
  # Display R Session Status
  #message("R packages were installed from repo: ", options('repo'), "\n")
  message("Below R package path are searching in order to find installed R pacakges in this R session:", "\n",
          paste(paste0("    ", .libPaths()), collapse = "\n"))
  message("\n")
  
  message("The project home directory is ", home)
  message("\n")
  
  rm(home, R_version)

Package: pilot2wrappers
File: inst/app/www/favicon.ico
Format: binary
Content:
  0000010001001c20000001002000a80e000016000000280000001c00000040000000010020000000000000000000000000000000000000000000000000000000
  0000000000000000000000000000000000000000000000000000000000004f4238000000000000000000514439044f4135244d4038ae4c4038aa4e4135215244
  390400000000000000004f4238000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  0000000000004f4238004f4238000000000000000000564638224d3f2f7e423b3ffd2f3a69ff353f6aff463e40fb4b3d2f7c5647382100000000000000004f42
  38004f42380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f42380000000000000000005748
  3d165544307141372fdb333d68ff1f43b1ff2458f7ff3e6cf8ff4861b4ff444a68ff3d332dd95645327056483d1600000000000000004f423800000000000000
  0000000000000000000000000000000000000000000000000000000000004f42380000000000000000005646375f493a27c933354bff2646adff1e4fe3ff2257
  f8ff2155f1ff2658f2ff3767faff3762e4ff4a61adff323243ff4a3b27c85546385e00000000000000004f423800000000000000000000000000000000000000
  0000000000004f423800000000000000000052443a2b504233c5393336f821409eff284dc3ff2355eeff2255f2ff2255f1ff2255f1ff2255f1ff2255f1ff2356
  f2ff3764efff284cbeff223e95ff3c3433f8514234c55143392c00000000000000004f42380000000000000000000000000000000000000000004f42370d4f42
  3894473c34ff24326aff1d4de0ff2256f7ff2c52caff2355edff2255f1ff2255f1ff2255f1ff2255f1ff2255f1ff2255f1ff2354edff2b52cdff2257f8ff1c4b
  d9ff26325dff4a3e36ff4f4238975042370e000000000000000000000000000000004d4237124b3e315d473e3de7303451ff1f41adff2458f7ff2355f0ff2554
  e4ff3050b9ff2753deff2454e9ff2255f3ff2255f1ff2255f1ff2255f3ff2354eaff3b5bcbff5f618fff2c56ddff2255f1ff2458faff1f3d99ff32354fff493f
  3cea4b3e31604c413714000000004f42384d524237ba433e50ff1f3ea0ff2054f5ff2655e6ff2a52d3ff2a52d2ff2853daff2155f4ff2953d6ff2a52d0ff2952
  d7ff2355edff2354ecff2952d6ff2651d5ffae8968ffdea45aff6e6d98ff2550d5ff2a52d1ff2556ebff1f53f0ff203d99ff48404eff554438bf4f42384f5344
  3af48b5d54ff4a4e94ff1e57fdff2255f2ff2255f2ff2355eeff2b52d0ff2155f6ff2255f1ff2155f3ff2256f1ff2f50beff2853d9ff2853d9ff2f50bcff2154
  f1ff666fb4ff9a878dff4364dcff2950cdff2355edff2255f2ff2255f2ff1d55fbff545191ff8e5f54ff53443af255453bffaf6f67ff545295ff1e55f8ff2255
  f1ff2255f1ff2356f0ff2854ddff2256f4ff2255f1ff2255f1ff2256f4ff2a52d1ff2355eeff2355efff2b51cdff2255f2ff2455efff2d58e5ff2156f4ff2a53
  d7ff2455eeff2255f1ff2255f1ff1a50ecff5f558dffb27169ff54453bfd54453bffba776fff73597aff1b4ad5ff2256f3ff2255f3ff1d45beff303f8aff1d50
  e6ff2256f3ff2155f3ff2a52d1ff2653e0ff2255f3ff2155f3ff2852d9ff2953d5ff2155f3ff2256f3ff1d4ee1ff303d84ff204accff2255f3ff2256f4ff214a
  cdff7f5b71ffb9766fff54453bfc54453bffb87771ffb77369ff6f5167ff2c47afff474578ffa9685bffb87469ff5c4b6cff274cc5ff2d51c9ff2354ecff2255
  f2ff2255f1ff2255f1ff2155f3ff2554e6ff2c51caff284dc2ff624d69ffbb756aff9c6257ff3f4381ff2e46a8ff7a5562ffbb766dffb57570ff54453bfd5445
  3bffb77671ffb97772ffc07a72ffb06e60ffc27a70ffba7772ffbd7973ff8c5954ff2c43a2ff2154f1ff2255f2ff2255f3ff2255f2ff2155f3ff2255f3ff2255
  f2ff2054f1ff32459dff9b6156ffbb7873ffbb7873ffc1796effb36f62ffbf7a73ffb97672ffb57570ff54453bfd54453bffb77671ffb97671ffb87671ffb977
  72ffb87671ffb87671ffbb7872ff99625dff293472ff2052e9ff2255f1ff204edbff2554e2ff2653daff204eddff2255f2ff1f51e7ff323466ffb27067ffb977
  72ffb87671ffb87671ffb97772ffb87671ffb97671ffb67570ff54453bfe54453bffb77571ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffbd78
  6eff373359ff1f50e5ff2251e3ff5a6279ff475da0ff576dafff485a93ff204fdeff2252e5ff533f56ffc17a72ffb87671ffb87671ffb87671ffb87671ffb876
  71ffb97671ffb67570ff54453bfe54453bfeb67571ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffc27c75ff44313bff2151e6ff1e49ceff1c3b
  9bff1f46c1ff2048c1ff1a3b9fff2150e3ff2453e6ff644240ffc07a74ffb87671ffb87671ffb87671ffb87671ffb87671ffb97671ffb67570ff54453bfe5445
  3bfeb67570ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffbf7a75ff6b433dff2540a2ff2256f4ff2256f4ff2256f3ff2256f3ff2256f4ff2255
  f3ff23388aff875651ffbd7973ffb87671ffb87671ffb87671ffb87671ffb87671ffb97671ffb67571ff54453bfe54453bfeb67570ffb97671ffb87671ffb876
  71ffb87671ffb87671ffb87671ffb77671ffc37d76ff845656ff204cd4ff2156f7ff2256f3ff2256f3ff2056f7ff2448c2ff9a6159ffc07b75ffb87671ffb876
  71ffb87671ffb87671ffb87671ffb87671ffb97671ffb77571ff54453bff54453bfeb67570ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffb876
  71ffb87671ffbf7a71ff68506dff2648bdff1445d2ff1847cfff2f49b1ff7d5765ffbf7a73ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb876
  71ffb97671ffb77571ff54453bff54453bfdb67670ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb8756eff9364
  6dff86637fff89647dff9a6668ffbb7771ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb97671ffb77671ff54453bff5445
  3bfdb57570ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffb7736effb7736effb87671ffb87671ffb97771ffba7770ffba7770ffb97671ffb876
  71ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb97671ffb87671ff54453bff54453bfcb57570ffb97671ffb87671ffb876
  71ffb87671ffb87671ffbd7f7affd0a3a0ffd2a7a5ffba7a75ffbc7f7affb87772ffb97772ffba7873ffbc7d78ffb87671ffb97873ffb87772ffb97772ffb977
  72ffb87671ffb87671ffb87671ffb87671ffb97671ffb87671ff54453bff54453bfdb67571ffb97772ffb87671ffb87671ffb87671ffb87570ffc38b87ffd6b0
  acffdab8b4ffdab7b4ffce9f9cffdcbbb8ffd1a6a2ffd2a8a6ffd6b1adffc08480ffd4aba8ffcb9a96ffd0a5a2ffc48d89ffb87570ffb87671ffb87671ffb876
  71ffb97672ffb97772ff54453bff52443af396655fffb77670ffbb7772ffb87671ffb87671ffb87570ffc38a86ffcd9d9affd3a9a5ffd7b1afffc28a86ffd8b3
  b0ffd2a7a4ffd0a5a1ffd9b6b4ffc28884ffd8b4b2ffd0a5a2ffd2a8a6ffc28a86ffb87570ffb87671ffb87671ffbb7772ffb67570ff97665fff53443af44f42
  385057463cbf74554cffa46c66ffbc7873ffb97671ffb87671ffbb7b76ffc38b86ffc28a85ffbf827effc48d89ffc48c88ffcc9b98ffbe807cffc58e8bffb977
  72ffc6918dffc48e8affc38a86ffbb7c77ffb87671ffb97671ffbc7873ffa36b66ff74544cff56463cbb4f42384e00000000473e34144e42386058463dea7c59
  51ffb77570ffbb7873ffb87671ffb77570ffb87570ffb87570ffb77570ffb97772ffbb7c77ffb77570ffb77570ffb87671ffb77570ffb77570ffb77570ffb876
  71ffbb7873ffb67570ff7b5851ff58463ce84e42385d473e3312000000000000000000000000000000004e41370e4f42389756463cff92635cffbb7873ffb876
  71ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffbb7873ff92635cff56463cff4f4238954e41
  370c00000000000000000000000000000000000000004f42380000000000000000004d41372c4c4036c3694e46f8a26c65ffb67570ffb97671ffb87671ffb876
  71ffb87671ffb87671ffb87671ffb87671ffb97671ffb67570ffa36c65ff694e46f84c4036c34d41372b00000000000000004f42380000000000000000000000
  00000000000000000000000000004f4238000000000000000000463e335f514339c87e5952fea36c66ffba7772ffb97772ffb87671ffb87671ffb97772ffba77
  72ffa36c66ff7e5952fe514339c9463e335f00000000000000004f42380000000000000000000000000000000000000000000000000000000000000000000000
  00004f4238000000000000000000473e3416423c326f5f4a41d87f5a52ffaa6f6affbe7974ffbe7974ffab706aff815b53ff604a41da423c3271473e33160000
  0000000000004f42380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f4238004f4238000000
  000000000000463d33214e42387b614b42fb865d56ff885f57ff624b42fe4e42387f463d33220000000000000000000000004f42380000000000000000000000
  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f42380000000000000000004c4137044e41
  372052433aaa52443aae4e4237224c41360400000000000000004f4238000000000000000000000000000000000000000000000000000000000000000000ffe0
  7ff0ffc03ff0ff000ff0fe0007f0f80001f0e0000070800000100000000000000000000000000000000000000000000000000000000000000000000000000000
  0000000000000000000000000000000000000000000000000000000000000000000080000010e0000070f80001f0fe0007f0ff000ff0ffc03ff0ffe07ff0

Package: pilot2wrappers
File: app.R
Format: text
Content:
  # Launch the ShinyApp (Do not remove this comment)
  # To deploy, run: rsconnect::deployApp()
  # Or use the blue button on top of this file
  
  pkgload::load_all(export_all = FALSE,helpers = FALSE,attach_testthat = FALSE)
  options( "golem.app.prod" = TRUE)
  pilot2wrappers::run_app() # add parameters here (if any)

Package: pilot2wrappers
File: R/app_config.R
Format: text
Content:
  #' Access files in the current app
  #' 
  #' NOTE: If you manually change your package name in the DESCRIPTION, 
  #' don't forget to change it here too, and in the config file. 
  #' For a safer name change mechanism, use the `golem::set_golem_name()` function.
  #' 
  #' @param ... character vectors, specifying subdirectory and file(s) 
  #' within your package. The default, none, returns the root of the app. 
  #' 
  #' @noRd
  app_sys <- function(...){
    system.file(..., package = "pilot2wrappers")
  }
  
  
  #' Read App Config
  #' 
  #' @param value Value to retrieve from the config file. 
  #' @param config GOLEM_CONFIG_ACTIVE value. If unset, R_CONFIG_ACTIVE. 
  #' If unset, "default".
  #' @param use_parent Logical, scan the parent directory for config file.
  #' 
  #' @noRd
  get_golem_config <- function(
    value, 
    config = Sys.getenv(
      "GOLEM_CONFIG_ACTIVE", 
      Sys.getenv(
        "R_CONFIG_ACTIVE", 
        "default"
      )
    ), 
    use_parent = TRUE
  ){
    config::get(
      value = value, 
      config = config, 
      # Modify this if your config file is somewhere else:
      file = app_sys("golem-config.yml"), 
      use_parent = use_parent
    )
  }
  

Package: pilot2wrappers
File: R/app_teal.R
Format: text
Content:
  #' @importFrom teal init modules module
  #' @importFrom shiny tags
  create_teal <- function() {
    adam_path <- get_golem_config("adam_path")
    adsl  <- haven::read_xpt(file.path(adam_path, "adsl.xpt"))
    adsl <- adsl %>%
      dplyr::mutate(
        TRT01P = factor(TRT01P, levels = c("Placebo", "Xanomeline Low Dose",  "Xanomeline High Dose")),
        AGEGR1 = factor(AGEGR1, levels = c("<65", "65-80", ">80")),
        RACE = factor(RACE, levels = c("WHITE", "BLACK OR AFRICAN AMERICAN", "AMERICAN INDIAN OR ALASKA NATIVE"))
      )
    adas  <- haven::read_xpt(file.path(adam_path, "adadas.xpt")) %>%
      dplyr::filter(
        EFFFL == "Y",
        ITTFL == 'Y',
        PARAMCD == 'ACTOT',
        ANL01FL == 'Y'
      )
    adtte <- haven::read_xpt(file.path(adam_path, "adtte.xpt")) %>%
      dplyr::filter(PARAMCD == "TTDE")
    adlb <- haven::read_xpt(file.path(adam_path, "adlbc.xpt")) %>%
      filter(PARAMCD == "GLUC" & !is.na(AVISITN))
    
    app <- teal::init(
      data = teal.data::cdisc_data(
        teal.data::cdisc_dataset("ADSL", adsl),
        teal.data::cdisc_dataset("ADAS", adas, keys = c("STUDYID", "USUBJID", "PARAMCD", "AVISIT", "QSSEQ")),
        teal.data::cdisc_dataset("ADTTE", adtte),
        teal.data::cdisc_dataset("ADLB", adlb)
      ),
      modules = modules(
        module(
          label = "App Information",
          server = function(input, output, session, datasets){},
          ui = function(id, ...) {
            shiny::includeMarkdown(app_sys("app", "docs", "about.md"))
          },
          filters = NULL
        ),
        module(
          label = "Demographic Table",
          ui = ui_t_demographic,
          server = srv_t_demographic,
          filters = NULL
        ),
        module(
          label = "KM plot for TTDE",
          ui = ui_g_kmplot,
          server = srv_g_kmplot,
          filters = c("ADSL", "ADTTE")
        ),
        module(
          label = "Primary Table",
          ui = ui_t_primary,
          server = srv_t_primary,
          filters = NULL
        ),
        module(
          label = "Efficacy Table",
          ui = ui_t_efficacy,
          server = srv_t_efficacy,
          filters = NULL
        ),
        module(
          label = "Visit Completion Table",
          ui = ui_t_disposition,
          server = srv_t_disposition,
          filters = NULL
        )
        
      ),
      header = "Pilot 2 Shiny Application",
      footer = tags$p(class="text-muted", "Source: R Consortium")
    )
    
    return(app)
  }

Package: pilot2wrappers
File: R/eff_models.R
Format: text
Content:
  #' ANCOVA Model data processing necessary for Table 14-3.01
  #'
  #' This function handles the necessary data processing to handle the CDISC pilot
  #' primary endpoint analysis. The original source can be found
  #' [here](https://github.com/atorus-research/CDISC_pilot_replication/blob/3c8e9e3798c02be8d93bd8e8944d1e0d3f6519e2/programs/funcs.R#L401)
  #'
  #' @importFrom tidyr pivot_longer
  #' @importFrom glue glue
  #'
  #' @param data Source dataset (filtered by flags)
  #' @param var Variable on which model should be run
  #' @param wk Visit to be modeled
  #' @param show_pvalue Indicator to display p-values in table
  #'
  #' @return Formatted dataframe
  #' 
  #' @importFrom dplyr filter mutate case_when rowwise select bind_rows arrange
  #' @importFrom stats drop1 confint
  #' @export
  #'
  efficacy_models <- function(data, var=NULL, wk=NULL, show_pvalue = TRUE) {
    # Need to set contrasts to work for Type III SS. See analysis results metadata for
    # table 14-3.01. Reference for R here: https://www.r-bloggers.com/anova-%E2%80%93-type-iiiiii-ss-explained/
    op <- options(contrasts = c("contr.sum","contr.poly"))
    
    # Subset to analyze
    data <- data %>%
      filter(AVISITN == wk)
    
    data <- data %>%
      mutate(
        TRTPCD = case_when(
          TRTPN == 0 ~ 'Pbo',
          TRTPN == 54 ~ 'Xan_Lo',
          TRTPN == 81 ~ 'Xan_Hi'
        )
      )
    
    # Create an ordered factor variable for the models
    data['TRTPCD_F'] <- factor(data$TRTPCD, levels=c('Xan_Hi', 'Xan_Lo', 'Pbo'))
    data['AWEEKC'] = factor(data$AVISIT)
    
    # Set up the models
    if (var == "CHG") {
      model1 <- lm(CHG ~ TRTPN + SITEGR1 + BASE, data=data)
      model2 <- lm(CHG ~ TRTPCD_F + SITEGR1 + BASE, data=data)
    } else {
      model1 <- lm(AVAL ~ TRTPN + SITEGR1, data=data)
      model2 <- lm(AVAL ~ TRTPCD_F + SITEGR1, data=data)
    }
    
    ## Dose Response --- NOTE: For statistics portions, I purposefully did not
    #import the libraries to make it explicitly clear which packages were being
    #used to match P-values.
    ancova <- drop1(model1, .~., test="F")
    
    # Pull it out into a table
    sect1 <- tibble::tibble(row_label=c('p-value(Dose Response) [1][2]'),
                    `81` = ifelse(show_pvalue, c(num_fmt(ancova[2, 'Pr(>F)'], int_len=4, digits=3, size=12)), "Not Applicable")
    ) %>%
      pad_row()
    
    ## Pairwise Comparisons ----
    # Here's a reference for the emmeans package and how to use it:
    #   https://cran.r-project.org/web/packages/emmeans/vignettes/confidence-intervals.html
    # Adjustments made are in line with the analysis results metadata in the analysis define
    # and PROC GLM documentation.
    
    # Linear model but use treatment group as a factor now
    # LS Means and weight proportionately to match OM option on PROC GLM in SAS
    lsm <- emmeans::lsmeans(model2, ~TRTPCD_F, weights='proportional')
    
    # Here on out - it's all the same data manipulation
    # Get pairwise contrast and remove P-values adjustment for multiple groups
    cntrst_p <- emmeans::contrast(lsm, method="pairwise", adjust=NULL)
    # 95% CI
    cntrst_ci <- confint(cntrst_p)
    
    # merge and convert into dataframe
    pw_data <- tibble::as_tibble(summary(cntrst_p)) %>%
      merge(tibble::as_tibble(cntrst_ci)) %>%
      rowwise() %>%
      # Create the display strings
      mutate(
        p = ifelse(show_pvalue, num_fmt(p.value, int_len=4, digits=3, size=12), "Not Applicable"),
        diff_se = as.character(
          glue::glue('{num_fmt(estimate, int_len=2, digits=1, size=4)} ({num_fmt(SE, int_len=1, digits=2, size=4)})')
        ),
        ci = as.character(
          glue::glue('({num_fmt(lower.CL, int_len=2, digits=1, size=4)};{num_fmt(upper.CL, int_len=1, digits=1, size=3)})')
        )
      ) %>%
      # Clean out the numeric variables
      select(contrast, p, diff_se, ci) %>%
      # Transpose
      tidyr::pivot_longer(c('p', 'diff_se', 'ci'), names_to = 'row_label')
    
    # Subset Xan_Lo - Pbo into table variables
    xan_lo <- pw_data %>%
      filter(contrast == 'Xan_Lo - Pbo') %>%
      # Rename to the table display variable
      select(`54`=value) %>%
      pad_row()
    
    #Add in row_label
    xan_lo['row_label'] <- c('p-value(Xan - Placebo) [1][3]', '  Diff of LS Means (SE)', '  95% CI', '')
    
    # Subset Xan_hi - Pbo into table variables
    xan_hi <- pw_data %>%
      filter(contrast == 'Xan_Hi - Pbo') %>%
      # Rename to the table display variable
      select(`81`=value) %>%
      pad_row()
    # Add in row_label
    xan_hi['row_label'] <- c('p-value(Xan - Placebo) [1][3]', '  Diff of LS Means (SE)', '  95% CI', '')
    xan_hi['ord'] <- c(1,2,3,4) # Order for sorting
    
    # Subset Xan_Hi - Xan_Lo into table variable
    xan_xan <- pw_data %>%
      filter(contrast == 'Xan_Hi - Xan_Lo') %>%
      # Rename to the table display variable
      select(`81`=value)
    # Add in row_label
    xan_xan['row_label'] <- c('p-value(Xan High - Xan Low) [1][3]', '  Diff of LS Means (SE)', '  95% CI')
    xan_xan['ord'] <- c(5,6,7) # Order for sorting
    
    # Pack it all together
    pw_final <- merge(xan_lo, xan_hi, by='row_label') %>%
      bind_rows(xan_xan) %>%
      arrange(ord)
    
    # Bind and clean up
    bind_rows(sect1, pw_final) %>% 
      select(row_label, 
             `var1_Xanomeline Low Dose` = `54`,
             `var1_Xanomeline High Dose` = `81`
      )
  }

Package: pilot2wrappers
File: R/fmt.R
Format: text
Content:
  #' Format numeric value
  #'
  #' @inheritParams base::formatC
  #'
  #' @examples
  #' fmt_num(1.25, digits = 1)
  #' @export
  fmt_num <- function(x, digits, width = digits + 4) {
    formatC(x,
      digits = digits,
      format = "f",
      width = width
    )
  }
  
  #' Format point estimator
  #'
  #' @param .mean mean of an estimator.
  #' @param .sd sd of an estimator.
  #' @param digits number of digits for `.mean` and `.sd`.
  #'
  #' @examples
  #' fmt_est(1.25, 0.5)
  #' @export
  fmt_est <- function(.mean,
                      .sd,
                      digits = c(1, 2)) {
    .mean <- fmt_num(.mean, digits[1], width = digits[1] + 4)
    .sd <- fmt_num(.sd, digits[2], width = digits[2] + 3)
    paste0(.mean, " (", .sd, ")")
  }
  
  #' Format confidence interval
  #'
  #' @param .est an estimator.
  #' @param .lower lower confidence interval bound of an estimator.
  #' @param .upper upper confidence interval bound of an estimator.
  #' @param digits number of digits for `.est`, `.lower`, and `.upper`.
  #' @param width the total field width.
  #'
  #' @examples
  #' fmt_ci(1, -0.25, 1.32)
  #' @export
  fmt_ci <- function(.est,
                     .lower,
                     .upper,
                     digits = 2,
                     width = digits + 3) {
    .est <- fmt_num(.est, digits, width)
    .lower <- fmt_num(.lower, digits, width)
    .upper <- fmt_num(.upper, digits, width)
    paste0(.est, " (", .lower, ",", .upper, ")")
  }
  
  #' Format p-Value
  #'
  #' @param .p a p-value.
  #' @param digits number of digits for `.est`, `.lower`, and `.upper`.
  #'
  #' @examples
  #' fmt_pval(0.2)
  #' @export
  fmt_pval <- function(.p, digits = 3) {
    scale <- 10^(-1 * digits)
    p_scale <- paste0("<", digits)
    ifelse(.p < scale, p_scale, fmt_num(.p, digits = digits))
  }

Package: pilot2wrappers
File: R/globals.R
Format: text
Content:
  utils::globalVariables(
    c(
      "TRT01P", "AGEGR1", "RACE", "EFFFL", "ITTFL", "PARAMCD", "ANL01FL", "TRTPN", 
      "AVISITN", "p.value", "contrast", "p", "diff_se",
      "ci", "value", "ord", "row_label", "54", "81", "row_label1", "ord_layer_index", "row_label2", "ord_layer_1", 
      "ord_layer_2", "TRTP", "USUBJID",
      "sd", "median", "AVAL", "CHG", ".", "TRTP", "BASE",
      "SE", "df", "N", "mean_bl",
      "sd_bl", "sd", "mean_chg", "sd_chg", 
      "emmean", "lower.CL", "upper.CL", "Trt",
      "CI", "estimate", "lower", "upper", "p.value",
      "comp", "SAFFL", "STUDYID", "USUBJID", "TRT01A",
      "AVAL", "CNSR", "PARAM", "PARAMCD", "anl"
    )
  )

Package: pilot2wrappers
File: R/helpers.R
Format: text
Content:
  #' Add a padding row below data
  #'
  #' @param .data Data to pad
  #' @param n Number of rows to pad
  #' 
  #' @importFrom stringr str_pad
  #'
  #' @return Dataframe with extra blank rows
  #' @export
  pad_row <- function(.data, n=1) {
    .data[(nrow(.data)+1):(nrow(.data)+n), ] <- ""
    .data
  }
  
  #' Number formatter
  #'
  #' Format numbers for presentation, with proper rounding of data
  #' 
  #' @param var Variable to format
  #' @param digits Desired number of decimal places
  #' @param size String size
  #' @param int_len Space allotted for integer side of the decimal
  #'
  #' @return Formatted string
  #' @export 
  num_fmt <- Vectorize(function(var, digits=0, size=10, int_len=3) {
    # Formats summary stat strings to align display correctly
    
    if (is.na(var)) return('')
    
    # Set nsmall to input digits
    nsmall = digits
    
    # Incremement digits for to compensate for display
    if (digits > 0) {
      digits = digits + 1
    }
    
    # Form the string
    return(str_pad(
      format(
        # Round
        round(var, nsmall),
        # Set width of format string
        width=(int_len+digits),
        # Decimals to display
        nsmall=nsmall
      ),
      # Overall width padding
      side='right', size
    ))
  })
  
  #' style a tooltip produced by the tippy package
  #' 
  #' @param text String for text in tooltip
  #' @param font_size Font size (in pixels)
  #'
  #' @return HTML with font size applied
  #' @export
  tooltip_text <- function(text, font_size = 16) {
    glue::glue("<span style='font-size:{font_size}px;'>{text}<span>")
  }
  
  #' update data file configuration setting
  #' 
  #' @param path path to directory containing data files
  #'   used within the Shiny application
  #' @return Used for side effects
  #' @export
  set_data_path <- function(path) {
    # assertions on path
    path <- normalizePath(path, mustWork = FALSE)
    
    if (!dir.exists(path)) stop(paste("The path", path, "does not exist. Please use a valid directory path"), call. = FALSE)
    
    # check if data files are present
    data_files <- c("adsl.xpt", "adadas.xpt", "adtte.xpt",  "adlbc.xpt")
    data_check <-sapply(data_files, function(x) file.exists(file.path(path, x)))
    
    if (!all(data_check)) {
      # determine which files are missing
      missing_files <- data_files[!data_check]
      stop(paste("The following data files are missing in the specified path", path, ":", paste(missing_files, collapse = ", ")), call. = FALSE)
    }
    
    # set golem config option
    golem::amend_golem_config("adam_path", path, talkative = FALSE)
    invisible(TRUE)
  }
  
  #' check if a filter is active in a teal module
  #' 
  #' @param datasets instance of teal filtered datasets class
  #' 
  #' @return boolean, TRUE if a filter is applied, FALSE otherwise
  filter_active <- function(datasets) {
    result <- FALSE
    if (length(names(datasets$get_filter_state()) > 0)) {
      filter_use <- purrr::map_lgl(names(datasets$get_filter_state()), ~{
        # grab call of filter code
        f_call <- datasets$get_call(.x)$filter
        f_call != glue::glue("{.x}_FILTERED <- {.x}")
      })
      result <- any(filter_use)
    }
    
    return(result)
  }

Package: pilot2wrappers
File: R/kmplot_helpers.R
Format: text
Content:
  add_risktable2 <- function(gg,
                             times = NULL,
                             statlist = "n.risk",
                             label = NULL,
                             group = "strata",
                             collapse = FALSE,
                             rowgutter = .16,
                             risk_font_size = 6.0,
                             risk_label_font_size = 12,
                             ...) {
    
    # User input validation ---------------------------------------------------
    
    if (!(is.numeric(rowgutter) == TRUE) || (rowgutter < 0) || (rowgutter > 1)) {
      stop("rowgutter should be a numeric value in range [0, 1]")
    }
    
    # Obtain the relevant table --------------------------------------------------
    tidy_object <- gg$data
    estimate_object <- visR:::.extract_estimate_object(gg)
    
    ggbld <- ggplot2::ggplot_build(gg)
    
    graphtimes <- as.numeric(ggbld$layout$panel_params[[1]]$x$get_labels())
    
    if (is.null(times)) times <- graphtimes
    
    final <-
      visR:::get_risktable(estimate_object,
                    times = times,
                    statlist = statlist,
                    label = label,
                    group = group,
                    collapse = collapse
      )
    
    times <- as.numeric(unique(final$time))
    statlist <- attributes(final)$statlist
    title <- attributes(final)$title
    
    attr(final, "time_ticks") <- NULL
    attr(final, "statlist") <- NULL
    attr(final, "title") <- NULL
    
    # Plot requested tables below using list approach with map function -------
    
    tbls <-
      base::Map(function(statlist, title = NA) {
        ggrisk <- ggplot2::ggplot(
          final,
          ggplot2::aes(
            x = time,
            y = stats::reorder(y_values, dplyr::desc(y_values)),
            label = format(get(statlist), nsmall = 0) # = value columns
          )
        ) +
          ggplot2::geom_text(size = risk_font_size, hjust = 0.5, vjust = 0.5, angle = 0, show.legend = FALSE) +
          ggplot2::theme_bw() +
          ggplot2::scale_x_continuous(
            breaks = graphtimes,
            limits = c(min(graphtimes), max(graphtimes))
          ) +
          ggplot2::theme(
            axis.title.x = ggplot2::element_text(
              size = 8,
              vjust = 1,
              hjust = 1
            ),
            panel.grid.major = ggplot2::element_blank(),
            panel.grid.minor = ggplot2::element_blank(),
            panel.border = ggplot2::element_blank(),
            axis.line = ggplot2::element_blank(),
            axis.text.x = ggplot2::element_blank(),
            axis.ticks = ggplot2::element_blank(),
            axis.text.y = ggplot2::element_text(size = risk_label_font_size, colour = "black", face = "plain"),
            plot.margin = ggplot2::unit(c(1, 0, 0, 0), "lines"),
            plot.title = ggplot2::element_text(hjust = 0, vjust = 0),
            legend.position = "none"
          ) +
          ggplot2::xlab(NULL) +
          ggplot2::ylab(NULL)
        
        if (!is.na(title) && !is.null(title)) {
          ggrisk <- ggrisk +
            ggplot2::ggtitle(title) +
            ggplot2::theme(plot.title = ggplot2::element_text(size = 10))
        }
        
        return(ggrisk)
      },
      statlist = as.list(statlist),
      title = as.list(title)
      )
    
    # Align plot and table by adjusting width ---------------------------------
    
    gglist <- list(gg) %>%
      base::append(tbls)
    
    ggA <- gglist %>%
      visR:::align_plots()
    
    # Create plot and add class -----------------------------------------------
    
    ## cowplot allows to align according to an axis (+left) and change the heigth
    ggB <- cowplot::plot_grid(
      plotlist = ggA,
      align = "none",
      nrow = length(ggA),
      rel_heights = c(1 - (rowgutter * (length(ggA) - 1)), rep(rowgutter, length(ggA) - 1))
    )
    
    class(ggB) <- c(class(ggB), intersect(class(gg), c("ggsurvfit", "ggtidycmprsk")))
    
    # Add individual components -----------------------------------------------
    
    components <- append(list(gg), tbls)
    names(components) <- c("visR_plot", title)
    ggB[["components"]] <- components
    
    return(ggB)
  }

Package: pilot2wrappers
File: R/package.R
Format: text
Content:
  #' @keywords internal
  "_PACKAGE"
  
  # The following block is used by usethis to automatically manage
  # roxygen namespace tags. Modify with care!
  ## usethis namespace: start
  ## usethis namespace: end
  NULL

Package: pilot2wrappers
File: R/run_app.R
Format: text
Content:
  #' Run the Shiny Application
  #'
  #' @param ... arguments to pass to golem_opts. 
  #' See `?golem::get_golem_options` for more details.
  #' @inheritParams shiny::shinyApp
  #'
  #' @export
  #' @importFrom shiny shinyApp
  #' @importFrom golem with_golem_options 
  run_app <- function(
    onStart = NULL,
    options = list(), 
    enableBookmarking = NULL,
    uiPattern = "/",
    ...
  ) {
    app <- create_teal()
    with_golem_options(
      app = shinyApp(
        ui = app$ui,
        server = app$server,
        onStart = onStart,
        options = options, 
        enableBookmarking = enableBookmarking, 
        uiPattern = uiPattern
      ), 
      golem_opts = list(...)
    )
  }

Package: pilot2wrappers
File: R/tm_g_kmplot.R
Format: text
Content:
  #' ui_g_kmplot UI Function
  #'
  #' @description A shiny Module.
  #'
  #' @param id,input,output,session Internal parameters for {shiny}.
  #'
  #' @noRd 
  #'
  #' @importFrom shiny NS tagList plotOutput
  ui_g_kmplot <- function(id, datasets) {
    ns <- NS(id)
    tagList(
      shinyWidgets::alert(
        tagList(tags$b("Important Information:"), tags$p("The analyses performed when utilizing subgroups or other subsets of the source data sets are considered ", tags$b("exploratory."))),
        status = "info",
        dismissible = TRUE
      ),
      plotOutput(ns("plot"), height = "800px")
    )
  }
  
  #' srv_g_kmplot Server Functions
  #'
  #' @noRd
  #' @importFrom shiny renderPlot
  #' @import ggplot2
  srv_g_kmplot <- function(input, output, session, datasets) {
    output$plot <- renderPlot({
      adsl <- datasets$get_data("ADSL", filtered = TRUE)
      adtte <- datasets$get_data("ADTTE", filtered = TRUE)
      anl <<- adsl %>% 
        dplyr::filter(
          SAFFL == "Y",
          STUDYID == "CDISCPILOT01"
        ) %>%
        dplyr::select(STUDYID, USUBJID, TRT01A) %>%
        dplyr::inner_join(
          filter(
            adtte, STUDYID == "CDISCPILOT01"
          ) %>% select(STUDYID, USUBJID, AVAL, CNSR, PARAM, PARAMCD),
          by = c("STUDYID", "USUBJID")
        ) %>%
        dplyr::mutate(
          TRT01A = factor(TRT01A, levels = c("Placebo", "Xanomeline Low Dose",  "Xanomeline High Dose")),
          AVAL = AVAL/30.4167
        )
      
       
      ## -----------------------------------------------------------------------------------------------------------------------------------
      # estimate survival
      surv_mod <- visR::estimate_KM(data = anl, strata = "TRT01A")
       
      # 
      # # save plot
      ggplot2::theme_set(theme_bw())
  
      KM <- visR::visr(surv_mod,
                       y_label = "Survival Probability (%)",
                       x_label = "Time (Months)", 
                       fun = "pct",
                       legend_position = "bottom" ) %>%
        visR::add_CNSR() %>%
        visR::add_CI() 
  
      KM <- KM +
        ggplot2::theme(axis.text = element_text(size = rel(1.3)),
                       axis.title = element_text(size = rel(1.4)),
                       legend.text = element_text(size = rel(1.3)),
                       legend.title = element_text(size = rel(1.4))) +
        ggplot2::geom_hline(yintercept=0.5, linetype = "dashed")
  
      KM <- KM %>%
        add_risktable2(group = "statlist")
        #visR::add_risktable(group = "statlist")
  
      title <- cowplot::ggdraw() +
        cowplot::draw_label(
          "KM plot for Time to First Dermatologic Event: Safety population\n",
          fontfamily = "sans",
          fontface = "bold",
          size=16
        )
  
      caption <- cowplot::ggdraw() +
        cowplot::draw_label(
          paste(
            "The shaded areas are 95% CI of the survival probability for each group",
            "\n",
            paste0(Sys.time())
          ),
          fontfamily = "sans",
          size=12
        )
  
      KM <- cowplot::plot_grid(
        title, KM, caption,
        ncol = 1,
        rel_heights = c(0.1,0.8,0.1)
      )
      KM
    })
  }

Package: pilot2wrappers
File: R/tm_t_demographic.R
Format: text
Content:
  #' ui_t_demographic UI Function
  #'
  #' @description A shiny Module.
  #'
  #' @param id,input,output,session Internal parameters for {shiny}.
  #'
  #' @noRd 
  #'
  #' @importFrom shiny NS tagList uiOutput
  #' @importFrom stats median sd
   ui_t_demographic <- function(id, datasets) {
     ns <- NS(id)
     uiOutput(ns("table"))
   }
   
   #' srv_t_demographic Server Functions
   #'
   #' @noRd
   #' @importFrom shiny renderUI
   #' @import rtables
   srv_t_demographic <- function(input, output, session, datasets) {
     output$table <- renderUI({
       ADSL_FILTERED <- datasets$get_data("ADSL", filtered = TRUE)
       vars <- c("AGE", "AGEGR1", "RACE", "HEIGHTBL", "WEIGHTBL", "BMIBL")
       labels <- datasets$get_varlabels("ADSL", vars)
       labels <- vapply(vars, function(x) ifelse(is.na(labels[[x]]), 
                                                 x, labels[[x]]), character(1))
       labels["AGEGR1"] <- "Age group"
       labels["AGE"] <- "Age (year)"
       labels["RACE"] <- "Race"
       lyt <- basic_table(title = "Protocol: CDISCPILOT01",
                          subtitles = "Population: Intent-to-Treat",
                          main_footer = paste0(Sys.time())
       ) %>%
         split_cols_by("TRT01P") %>%
         add_colcounts() %>%
         analyze(vars, function(x, ...) {
           if (is.numeric(x)) {
             in_rows(
               "Mean (SD)" = c(mean(x), sd(x)),
               "Median" = median(x),
               "Min - Max" = range(x),
               .formats = c("xx.xx (xx.xx)", "xx.xx", "xx.xx - xx.xx")
             )
           } else if (is.factor(x) || is.character(x)) {
             in_rows(.list = list_wrap_x(table)(x))
           } else {
             stop("type not supproted")
           }
         },
         var_labels = labels)
       tbl <- build_table(lyt, ADSL_FILTERED)
       as_html(tbl)
       
     })
     
   }

Package: pilot2wrappers
File: R/tm_t_disposition.R
Format: text
Content:
  #' ui_t_disposition UI Function
  #'
  #' @description A shiny Module.
  #'
  #' @param id,input,output,session Internal parameters for {shiny}.
  #'
  #' @noRd 
  #'
  #' @importFrom shiny NS tagList uiOutput
  ui_t_disposition <- function(id, datasets) {
    ns <- NS(id)
    tagList(
      uiOutput(ns("table")),
      p("Table is based on participants within the ITT population")
    )
  }
  
  #' srv_t_primary Server Functions
  #'
  #' @noRd
  #' @importFrom shiny renderUI
  #' @import Tplyr
  #' @import dplyr
  srv_t_disposition <- function(input, output, session, datasets) {
    output$table <- renderUI({
      ADSL_FILTERED <- datasets$get_data("ADSL", filtered = TRUE)
      ADLB_FILTERED <- datasets$get_data("ADLB", filtered = TRUE)
      adsl <- ADSL_FILTERED
      adlbc <- ADLB_FILTERED
      
      # use adlbc data set to remain consistent with efficacy table input data
      visit_df <- adlbc %>%
        filter(PARAMCD == "GLUC") %>% 
        filter(AVISITN != 98) %>%
        filter(!is.na(AVISITN)) %>%
        select(USUBJID, AVISITN) %>%
        distinct() %>%
        left_join(
          select(adsl, USUBJID, TRT01P),
          by = "USUBJID"
        )
      
      # visit number and week lookup
      v_week_df <- tibble::tibble(
        AVISITN = c(0, 2, 4, 6, 8, 12, 16, 20, 24, 26, 99),
        VISIT = c("Baseline ", paste("Week", c(2, 4, 6, 8, 12, 16, 20, 24, 26)), "End of Treatment")
      )%>%
        mutate(VISIT = factor(VISIT, levels = c("Baseline ", paste("Week", c(2, 4, 6, 8, 12, 16, 20, 24, 26)), "End of Treatment")))
      
      # build Tplyr table
      t_visit <- visit_df %>%
        left_join(v_week_df, by = "AVISITN") %>%
        tplyr_table(TRT01P) %>%
        set_pop_data(adsl) %>%
        set_pop_treat_var(TRT01P) %>%
        add_total_group() %>%
        add_layer(
          group_count(VISIT) %>%
          set_distinct_by(USUBJID) %>%
          set_format_strings(
            f_str('xx (xx%)', distinct_n, distinct_pct)
          )
        )
  
      b_t_visit <- t_visit %>%
        build() %>%
        dplyr::select(row_label1, var1_Placebo, `var1_Xanomeline High Dose`, `var1_Xanomeline Low Dose`, var1_Total) %>%
        add_column_headers(
          paste0("|Placebo</br>(N=**Placebo**)",
                 "| Xanomeline High Dose</br>(N=**Xanomeline High Dose**) ",
                 "| Xanomeline Low Dose</br>(N=**Xanomeline Low Dose**) ",
                 "| Total</br>(N=**Total**) "),
          header_n(t_visit)
        )
  
      ht <- huxtable::as_hux(b_t_visit, add_colnames = FALSE) %>%
        huxtable::set_bold(1, 1:ncol(b_t_visit), TRUE) %>%
        huxtable::set_align(1, 1:ncol(b_t_visit), 'center') %>%
        huxtable::set_valign(1, 1:ncol(b_t_visit), 'bottom') %>%
        huxtable::set_bottom_border(1, 1:ncol(b_t_visit), 1) %>%
        huxtable::set_width(0.9) %>%
        huxtable::set_escape_contents(FALSE) %>%
        huxtable::set_col_width(c(.5, 1/8, 1/8, 1/8, 1/8))
      htmltools::HTML(huxtable::to_html(ht))
    })
  
  }

Package: pilot2wrappers
File: R/tm_t_efficacy.R
Format: text
Content:
  #' ui_t_efficacy UI Function
  #'
  #' @description A shiny Module.
  #'
  #' @param id,input,output,session Internal parameters for {shiny}.
  #'
  #' @noRd 
  #'
  #' @importFrom shiny NS tagList fluidRow h4 h6 column fluidPage
  #' @importFrom graphics pairs 
  #' @importFrom stats lm sd
  #' @import tippy
  ui_t_efficacy <- function(id, datasets) {
    ns <- NS(id) 
    fluidPage(
      tags$br(),
      tags$br(),
      fluidRow(
        tippy::tippy(
          h4("Primary Endpoint Analysis: Glucose (mmol/L) - Summary at Week 20 LOCF"),
          tooltip = tooltip_text("Table is based on participants who have observable data at Baseline and Week 20", 16),
          allowHTML = TRUE
        ),
        tags$br(),tags$br(),
        column(
          width=10,
          reactable::reactableOutput(ns("tbl_efficacy_1"))
        ) 
      ),
      
      tags$br(),
      tags$br(),
      tags$hr(),
      fluidRow(
        tippy::tippy(
          h4("Pairwise Comparison"),
          tooltip = tooltip_text("Inference in this table is based on a Analysis of Covariance (ANCOVA) model with treatment and baseline value as covariates.", 16),
          allowHTML = TRUE
        ),
        tags$br(),
        tags$br(),
        column(
          width=10,
          reactable::reactableOutput(ns("tbl_efficacy_2"))
        )
      ),
      tags$br(),
      tags$br(),
      tags$hr(),
      fluidRow(
        h6(tags$i("Abbreviations: CI=Confidence Interval; LS=Least Squares; SD=Standard Deviation")),
        h6(tags$p("Table is based on participants who had observable data at Baseline and Week 20")),
        h6(tags$p("Based on an Analysis of Covariance (ANCOVA) model with treatment and baseline value as covariates"))
      )
    )
  }
  
  #' srv_t_efficacy Server Functions
  #'
  #' @noRd
  #' @importFrom shiny reactive 
  #' @importFrom reactable reactable renderReactable colGroup colDef
  #' @importFrom dplyr filter group_by summarise mutate select n filter
  srv_t_efficacy <- function(input, output, session, datasets) {
    efficacy_results <- reactive({
      adsl <- datasets$get_data("ADSL", filtered = TRUE)
      
      itt <- adsl %>%
        filter(ITTFL == "Y") %>%
        select("STUDYID", "USUBJID")
      
      adlb <- datasets$get_data("ADLB", filtered = TRUE)
      
      # prepare labs data for pairwise comparison
      adlb1 <- adlb %>%
        right_join(itt, by = c("STUDYID", "USUBJID")) %>%
        filter(TRTPN %in% c(0, 81), PARAMCD == "GLUC", !is.na(AVISITN)) %>%
        mutate(TRTPN = ifelse(TRTPN == 0, 99, TRTPN)) 
      
      gluc_lmfit <- adlb1 %>%
        filter(AVISITN == 20) %>%
        lm(CHG ~ BASE + TRTPN, data = .)
      
      t10 <- adlb1 %>%
        filter(AVISITN == 0) %>%
        group_by(TRTPN, TRTP) %>%
        summarise(
          N = n(),
          mean_bl = mean(BASE),
          sd_bl = sd(BASE)
        )
      
      ## Raw summary statistics
      t11 <- adlb1 %>%
        filter(AVISITN == 20, !is.na(CHG), !is.na(BASE)) %>%
        group_by(TRTPN, TRTP) %>%
        summarise(
          N_20 = n(),
          mean_chg = mean(CHG),
          sd_chg = sd(CHG),
          mean = mean(AVAL),
          sd = sd(AVAL)
        )
      
      ## Calculate LS mean
      t12 <- emmeans::emmeans(gluc_lmfit, "TRTPN")
      
      ## Merge and format data for reporting
      apr0ancova1 <- merge(t10, t11) %>%
        merge(t12) %>%
        mutate(emmean_sd = SE * sqrt(df)) %>%
        mutate(
          Trt = c("Xanomeline High Dose", "Placebo"),
          N1 = N,
          Mean1 = fmt_est(mean_bl, sd_bl),
          N2 = N_20,
          Mean2 = fmt_est(mean, sd),
          N3 = N_20,
          Mean3 = fmt_est(mean_chg, sd_chg),
          CI = fmt_ci(emmean, lower.CL, upper.CL)
        ) %>%
        select(Trt:CI)
      
      
      ## -----------------------------------------------------------------------------------------------------------------------------------
      t2 <- data.frame(pairs(t12))
      
      ## Treatment Comparison
      apr0ancova2 <- t2 %>%
        mutate(
          lower = estimate - 1.96 * SE,
          upper = estimate + 1.96 * SE
        ) %>%
        mutate(
          comp = "Study Drug vs. Placebo",
          mean = fmt_ci(estimate, lower, upper),
          p = ifelse(filter_active(datasets), "Not Applicable", fmt_pval(p.value))
        ) %>%
        select(comp:p)
      
      ## -----------------------------------------------------------------------------------------------------------------------------------
      ### Calculate root mean square and save data in output folder
      apr0ancova3 <- data.frame(rmse = paste0(
        "Root Mean Squared Error of Change = ",
        formatC(sqrt(mean((gluc_lmfit$residuals)^2)), digits = 2, format = "f", flag = "0")
      ))
      list(
        apr0ancova1 = apr0ancova1,
        apr0ancova2 = apr0ancova2,
        apr0ancova3 = apr0ancova3
      )
    })
    output$tbl_efficacy_1 <- reactable::renderReactable({
      efficacy_results <- efficacy_results()
      apr0ancova1 <- efficacy_results$apr0ancova1
      coln =c("Treatment",
              "N","Mean (SD)",
              "N","Mean (SD)",
              "N","Mean (SD)","LS Mean (95% CI)")
      colgr=c(1,2,2,3,3,4,4,4)
      colwidths <- c(rep(100, 7), 150)
      colgrn=c("","Baseline","Week 20","Change from Baseline")
      collist = purrr::map2(1:ncol(apr0ancova1), colwidths, ~{
        colDef(name = coln[.x], minWidth = .y)
      })
      names(collist) = names(apr0ancova1)
      reactable(
        apr0ancova1,
        columns = collist,
        columnGroups = list(
          colGroup(name = colgrn[2], columns = names(apr0ancova1)[colgr==2]),
          colGroup(name = colgrn[3], columns = names(apr0ancova1)[colgr==3]),
          colGroup(name = colgrn[4], columns = names(apr0ancova1)[colgr==4])
        )
      )
    })
    output$tbl_efficacy_2 <- reactable::renderReactable({
      efficacy_results <- efficacy_results()
      apr0ancova2 <- efficacy_results$apr0ancova2
      apr0ancova3 <- efficacy_results$apr0ancova3
      coln =c("",
              "Difference in LS Mean (95% CI)",
              "p-Value")
      collist = lapply(1:ncol(apr0ancova2),function(xx){
        if(xx>1){colDef(name=coln[xx])
        }else{colDef(name=coln[xx],footer=apr0ancova3$rmse)}
      })
      names(collist) = names(apr0ancova2)
      
      reactable(
        apr0ancova2,
        columns = collist,
        defaultColDef = colDef(footerStyle = list(fontStyle = "italic"))
      )
    })
  }

Package: pilot2wrappers
File: R/tm_t_primary.R
Format: text
Content:
  #' ui_t_primary UI Function
  #'
  #' @description A shiny Module.
  #'
  #' @param id,input,output,session Internal parameters for {shiny}.
  #'
  #' @noRd 
  #'
  #' @importFrom shiny NS tagList uiOutput
  ui_t_primary <- function(id, datasets) {
    ns <- NS(id)
    tagList(
      uiOutput(ns("table")),
      p("Statistical model and comparison p-values removed when applying data filters. Refer to the application information for additional details."),
      p("[1] Based on Analysis of covariance (ANCOVA) model with treatment and site group as factors and baseline value as a covariate."),
      p("[2] Test for a non-zero coefficient for treatment (dose) as a continuous variable."),
      p("[3] Pairwise comparison with treatment as a categorical variable: p-values without adjustment for multiple comparisons.")
    )
  }
  
  #' srv_t_primary Server Functions
  #'
  #' @noRd
  #' @importFrom shiny renderUI
  #' @import Tplyr
  srv_t_primary <- function(input, output, session, datasets) {
    output$table <- renderUI({
      ADSL_FILTERED <- datasets$get_data("ADSL", filtered = TRUE)
      ADAS_FILTERED <- datasets$get_data("ADAS", filtered = TRUE)
      adas <- ADAS_FILTERED
  
      ## -----------------------------------------------------------------------------------------------------------------------------------
      t <- tplyr_table(adas, TRTP) %>%
        set_pop_data(ADSL_FILTERED) %>%
        set_pop_treat_var(TRT01P) %>%
        set_pop_where(EFFFL == "Y" & ITTFL == "Y") %>%
        set_distinct_by(USUBJID) %>%
        set_desc_layer_formats(
          'n' = f_str('xx', n),
          'Mean (SD)' = f_str('xx.x (xx.xx)', mean, sd),
          'Median (Min; Max)' = f_str('xx.x (xxx;xx)', median, min, max)
        ) %>%
        add_layer(
          group_desc(AVAL, where= AVISITN ==  0, by = "Baseline")
        ) %>%
        add_layer(
          group_desc(AVAL, where= AVISITN == 24, by = "Week 24")
        ) %>%
        add_layer(
          group_desc(CHG,  where= AVISITN == 24, by = "Change from Baseline")
        )
  
      sum_data <- t %>%
        build() %>%
        nest_rowlabels() %>%
        dplyr::select(-starts_with('ord')) %>%
        add_column_headers(
          paste0("|Placebo</br>(N=**Placebo**)| Xanomeline High Dose</br>(N=**Xanomeline High Dose**) ",
                 "| Xanomeline Low Dose</br>(N=**Xanomeline Low Dose**)"),
          header_n(t)
        )
  
  
      ## -----------------------------------------------------------------------------------------------------------------------------------
      model_portion <- efficacy_models(adas, 'CHG', 24, !filter_active(datasets))
  
  
      ## -----------------------------------------------------------------------------------------------------------------------------------
      final <- dplyr::bind_rows(sum_data, model_portion)
  
      ht <- huxtable::as_hux(final, add_colnames = FALSE) %>%
        huxtable::set_bold(1, 1:ncol(final), TRUE) %>%
        huxtable::set_align(1, 1:ncol(final), 'center') %>%
        huxtable::set_valign(1, 1:ncol(final), 'bottom') %>%
        huxtable::set_bottom_border(1, 1:ncol(final), 1) %>%
        huxtable::set_width(1) %>%
        huxtable::set_escape_contents(FALSE) %>%
        huxtable::set_col_width(c(.5, 1/6, 1/6, 1/6))
      htmltools::HTML(huxtable::to_html(ht))
    })
  
  }

Package: pilot2wrappers
File: R/Tplyr_helpers.R
Format: text
Content:
  #' Nest Row Labels in a Tplyr table
  #' 
  #' This is a (high ungeneralized) helper function. Current function assumes that 
  #' row_label1 groups row_label2, and turns row_label1 into a stub over its 
  #' related groups of row_label2.
  #'
  #' @param .dat Input data set - should come from a built Tplyr table. 
  #'
  #' @importFrom dplyr distinct rename bind_rows mutate select arrange across starts_with
  #' @importFrom tidyr replace_na
  #' 
  #' @return data.frame with row labels nested
  #' @export 
  nest_rowlabels <- function(.dat) {
    stubs <- .dat %>% 
      distinct(row_label1, ord_layer_index) %>% 
      rename(row_label = row_label1) %>% 
      mutate(
        ord_layer_1 = 0, 
        ord_layer_2 = 0
      )
    
    .dat %>% 
      select(-row_label1, row_label=row_label2) %>% 
      bind_rows(stubs) %>% 
      arrange(ord_layer_index, ord_layer_1, ord_layer_2) %>% 
      mutate(
        across(starts_with('var'), ~ tidyr::replace_na(., ''))
      )
  }

Package: pilot2wrappers
File: R/utils-pipe.R
Format: text
Content:
  #' Pipe operator
  #'
  #' See \code{magrittr::\link[magrittr:pipe]{\%>\%}} for details.
  #'
  #' @name %>%
  #' @rdname pipe
  #' @keywords internal
  #' @export
  #' @importFrom magrittr %>%
  #' @usage lhs \%>\% rhs
  #' @param lhs A value or the magrittr placeholder.
  #' @param rhs A function call using the magrittr semantics.
  #' @return The result of calling `rhs(lhs)`.
  NULL

Package: pilot2wrappers
File: renv.lock
Format: text
Content:
  {
    "R": {
      "Version": "4.2.0",
      "Repositories": [
        {
          "Name": "CRAN",
          "URL": "https://packagemanager.rstudio.com/cran/2022-09-01"
        },
        {
          "Name": "TEAL",
          "URL": "https://insightsengineering.github.io/depository/2022_06_09"
        }
      ]
    },
    "Packages": {
      "MASS": {
        "Package": "MASS",
        "Version": "7.3-54",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0e59129db205112e3963904db67fd0dc",
        "Requirements": []
      },
      "Matrix": {
        "Package": "Matrix",
        "Version": "1.3-4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4ed05e9c9726267e4a5872e09c04587c",
        "Requirements": [
          "lattice"
        ]
      },
      "R.cache": {
        "Package": "R.cache",
        "Version": "0.15.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e92a8ea8388c47c82ed8aa435ed3be50",
        "Requirements": [
          "R.methodsS3",
          "R.oo",
          "R.utils",
          "digest"
        ]
      },
      "R.methodsS3": {
        "Package": "R.methodsS3",
        "Version": "1.8.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4bf6453323755202d5909697b6f7c109",
        "Requirements": []
      },
      "R.oo": {
        "Package": "R.oo",
        "Version": "1.24.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5709328352717e2f0a9c012be8a97554",
        "Requirements": [
          "R.methodsS3"
        ]
      },
      "R.utils": {
        "Package": "R.utils",
        "Version": "2.11.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a7ecb8e60815c7a18648e84cd121b23a",
        "Requirements": [
          "R.methodsS3",
          "R.oo"
        ]
      },
      "R6": {
        "Package": "R6",
        "Version": "2.5.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "470851b6d5d0ac559e9d01bb352b4021",
        "Requirements": []
      },
      "RColorBrewer": {
        "Package": "RColorBrewer",
        "Version": "1.1-2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e031418365a7f7a766181ab5a41a5716",
        "Requirements": []
      },
      "Rcpp": {
        "Package": "Rcpp",
        "Version": "1.0.8",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "22b546dd7e337f6c0c58a39983a496bc",
        "Requirements": []
      },
      "Tplyr": {
        "Package": "Tplyr",
        "Version": "0.4.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "88528aaa5d91c9b32536f3c5df138489",
        "Requirements": [
          "assertthat",
          "dplyr",
          "forcats",
          "lifecycle",
          "magrittr",
          "purrr",
          "rlang",
          "stringr",
          "tibble",
          "tidyr",
          "tidyselect"
        ]
      },
      "askpass": {
        "Package": "askpass",
        "Version": "1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e8a22846fff485f0be3770c2da758713",
        "Requirements": [
          "sys"
        ]
      },
      "assertthat": {
        "Package": "assertthat",
        "Version": "0.2.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "50c838a310445e954bc13f26f26a6ecf",
        "Requirements": []
      },
      "attempt": {
        "Package": "attempt",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d7421bb5dfeb2676b9e4a5a60c2fcfd2",
        "Requirements": [
          "rlang"
        ]
      },
      "backports": {
        "Package": "backports",
        "Version": "1.4.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c39fbec8a30d23e721980b8afb31984c",
        "Requirements": []
      },
      "base64enc": {
        "Package": "base64enc",
        "Version": "0.1-3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "543776ae6848fde2f48ff3816d0628bc",
        "Requirements": []
      },
      "bit": {
        "Package": "bit",
        "Version": "4.0.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f36715f14d94678eea9933af927bc15d",
        "Requirements": []
      },
      "bit64": {
        "Package": "bit64",
        "Version": "4.0.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "9fe98599ca456d6552421db0d6772d8f",
        "Requirements": [
          "bit"
        ]
      },
      "brew": {
        "Package": "brew",
        "Version": "1.0-6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "92a5f887f9ae3035ac7afde22ba73ee9",
        "Requirements": []
      },
      "brio": {
        "Package": "brio",
        "Version": "1.1.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "976cf154dfb043c012d87cddd8bca363",
        "Requirements": []
      },
      "broom": {
        "Package": "broom",
        "Version": "0.7.12",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bfa8a039d77ae8d5413254e572c8abea",
        "Requirements": [
          "backports",
          "dplyr",
          "ellipsis",
          "generics",
          "ggplot2",
          "glue",
          "purrr",
          "rlang",
          "stringr",
          "tibble",
          "tidyr"
        ]
      },
      "bslib": {
        "Package": "bslib",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "56ae7e1987b340186a8a5a157c2ec358",
        "Requirements": [
          "htmltools",
          "jquerylib",
          "jsonlite",
          "rlang",
          "sass"
        ]
      },
      "cachem": {
        "Package": "cachem",
        "Version": "1.0.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "648c5b3d71e6a37e3043617489a0a0e9",
        "Requirements": [
          "fastmap",
          "rlang"
        ]
      },
      "callr": {
        "Package": "callr",
        "Version": "3.7.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "461aa75a11ce2400245190ef5d3995df",
        "Requirements": [
          "R6",
          "processx"
        ]
      },
      "checkmate": {
        "Package": "checkmate",
        "Version": "2.0.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a667800d5f0350371bedeb8b8b950289",
        "Requirements": [
          "backports"
        ]
      },
      "cli": {
        "Package": "cli",
        "Version": "3.3.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "23abf173c2b783dcc43379ab9bba00ee",
        "Requirements": [
          "glue"
        ]
      },
      "clipr": {
        "Package": "clipr",
        "Version": "0.7.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ebaa97ac99cc2daf04e77eecc7b781d7",
        "Requirements": []
      },
      "colorspace": {
        "Package": "colorspace",
        "Version": "2.0-2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6baccb763ee83c0bd313460fdb8b8a84",
        "Requirements": []
      },
      "commonmark": {
        "Package": "commonmark",
        "Version": "1.8.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "2ba81b120c1655ab696c935ef33ea716",
        "Requirements": []
      },
      "config": {
        "Package": "config",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "31d77b09f63550cee9ecb5a08bf76e8f",
        "Requirements": [
          "yaml"
        ]
      },
      "cowplot": {
        "Package": "cowplot",
        "Version": "1.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "b418e8423699d11c7f2087c2bfd07da2",
        "Requirements": [
          "ggplot2",
          "gtable",
          "rlang",
          "scales"
        ]
      },
      "cpp11": {
        "Package": "cpp11",
        "Version": "0.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "fa53ce256cd280f468c080a58ea5ba8c",
        "Requirements": []
      },
      "crayon": {
        "Package": "crayon",
        "Version": "1.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0a6a65d92bd45b47b94b84244b528d17",
        "Requirements": []
      },
      "credentials": {
        "Package": "credentials",
        "Version": "1.3.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "93762d0a34d78e6a025efdbfb5c6bb41",
        "Requirements": [
          "askpass",
          "curl",
          "jsonlite",
          "openssl",
          "sys"
        ]
      },
      "curl": {
        "Package": "curl",
        "Version": "4.3.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "022c42d49c28e95d69ca60446dbabf88",
        "Requirements": []
      },
      "desc": {
        "Package": "desc",
        "Version": "1.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "28763d08fadd0b733e3cee9dab4e12fe",
        "Requirements": [
          "R6",
          "crayon",
          "rprojroot"
        ]
      },
      "devtools": {
        "Package": "devtools",
        "Version": "2.4.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "fc35e13bb582e5fe6f63f3d647a4cbe5",
        "Requirements": [
          "callr",
          "cli",
          "desc",
          "ellipsis",
          "fs",
          "httr",
          "lifecycle",
          "memoise",
          "pkgbuild",
          "pkgload",
          "rcmdcheck",
          "remotes",
          "rlang",
          "roxygen2",
          "rstudioapi",
          "rversions",
          "sessioninfo",
          "testthat",
          "usethis",
          "withr"
        ]
      },
      "diffobj": {
        "Package": "diffobj",
        "Version": "0.3.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bcaa8b95f8d7d01a5dedfd959ce88ab8",
        "Requirements": [
          "crayon"
        ]
      },
      "digest": {
        "Package": "digest",
        "Version": "0.6.29",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "cf6b206a045a684728c3267ef7596190",
        "Requirements": []
      },
      "dockerfiler": {
        "Package": "dockerfiler",
        "Version": "0.1.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e96dd3b237b2f38a2955f4bf41e047a1",
        "Requirements": [
          "R6",
          "attempt",
          "cli",
          "desc",
          "fs",
          "glue",
          "jsonlite",
          "pkgbuild",
          "remotes",
          "usethis"
        ]
      },
      "downlit": {
        "Package": "downlit",
        "Version": "0.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ba63dc9ab5a31f3209892437e40c5f60",
        "Requirements": [
          "brio",
          "desc",
          "digest",
          "evaluate",
          "fansi",
          "memoise",
          "rlang",
          "vctrs",
          "yaml"
        ]
      },
      "dplyr": {
        "Package": "dplyr",
        "Version": "1.0.9",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f0bda1627a7f5d3f9a0b5add931596ac",
        "Requirements": [
          "R6",
          "generics",
          "glue",
          "lifecycle",
          "magrittr",
          "pillar",
          "rlang",
          "tibble",
          "tidyselect",
          "vctrs"
        ]
      },
      "ellipsis": {
        "Package": "ellipsis",
        "Version": "0.3.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bb0eec2fe32e88d9e2836c2f73ea2077",
        "Requirements": [
          "rlang"
        ]
      },
      "emmeans": {
        "Package": "emmeans",
        "Version": "1.7.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "90ddb148f4aac2689cefaf6c11ee47e9",
        "Requirements": [
          "estimability",
          "mvtnorm",
          "numDeriv",
          "xtable"
        ]
      },
      "estimability": {
        "Package": "estimability",
        "Version": "1.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "05901bd61be60fd3bfc5b7d7c3517d1d",
        "Requirements": []
      },
      "evaluate": {
        "Package": "evaluate",
        "Version": "0.16",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "9a3d3c345f8a5648abe61608aaa29518",
        "Requirements": []
      },
      "fansi": {
        "Package": "fansi",
        "Version": "1.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f28149c2d7a1342a834b314e95e67260",
        "Requirements": []
      },
      "farver": {
        "Package": "farver",
        "Version": "2.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c98eb5133d9cb9e1622b8691487f11bb",
        "Requirements": []
      },
      "fastmap": {
        "Package": "fastmap",
        "Version": "1.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "77bd60a6157420d4ffa93b27cf6a58b8",
        "Requirements": []
      },
      "fontawesome": {
        "Package": "fontawesome",
        "Version": "0.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "55624ed409e46c5f358b2c060be87f67",
        "Requirements": [
          "htmltools",
          "rlang"
        ]
      },
      "forcats": {
        "Package": "forcats",
        "Version": "0.5.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "81c3244cab67468aac4c60550832655d",
        "Requirements": [
          "ellipsis",
          "magrittr",
          "rlang",
          "tibble"
        ]
      },
      "formatters": {
        "Package": "formatters",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "94fe1879a08dc2d575c3a5eeae33a7c9",
        "Requirements": [
          "htmltools"
        ]
      },
      "fs": {
        "Package": "fs",
        "Version": "1.5.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7c89603d81793f0d5486d91ab1fc6f1d",
        "Requirements": []
      },
      "generics": {
        "Package": "generics",
        "Version": "0.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "177475892cf4a55865868527654a7741",
        "Requirements": []
      },
      "gert": {
        "Package": "gert",
        "Version": "1.5.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8fddce7cbd59467106266a6e93e253b4",
        "Requirements": [
          "askpass",
          "credentials",
          "openssl",
          "rstudioapi",
          "sys",
          "zip"
        ]
      },
      "ggplot2": {
        "Package": "ggplot2",
        "Version": "3.3.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d7566c471c7b17e095dd023b9ef155ad",
        "Requirements": [
          "MASS",
          "digest",
          "glue",
          "gtable",
          "isoband",
          "mgcv",
          "rlang",
          "scales",
          "tibble",
          "withr"
        ]
      },
      "gh": {
        "Package": "gh",
        "Version": "1.3.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "38c2580abbda249bd6afeec00d14f531",
        "Requirements": [
          "cli",
          "gitcreds",
          "httr",
          "ini",
          "jsonlite"
        ]
      },
      "gitcreds": {
        "Package": "gitcreds",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f3aefccc1cc50de6338146b62f115de8",
        "Requirements": []
      },
      "glue": {
        "Package": "glue",
        "Version": "1.6.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "de07842fc27ebf60e1102091c0c85e47",
        "Requirements": []
      },
      "golem": {
        "Package": "golem",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0eaf594de1dcbcd37c6d79806d57b473",
        "Requirements": [
          "attempt",
          "cli",
          "config",
          "crayon",
          "desc",
          "dockerfiler",
          "fs",
          "here",
          "htmltools",
          "jsonlite",
          "pkgload",
          "remotes",
          "rlang",
          "roxygen2",
          "rstudioapi",
          "shiny",
          "testthat",
          "usethis",
          "yaml"
        ]
      },
      "gridExtra": {
        "Package": "gridExtra",
        "Version": "2.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7d7f283939f563670a697165b2cf5560",
        "Requirements": [
          "gtable"
        ]
      },
      "gtable": {
        "Package": "gtable",
        "Version": "0.3.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ac5c6baf7822ce8732b343f14c072c4d",
        "Requirements": []
      },
      "haven": {
        "Package": "haven",
        "Version": "2.4.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "10bec8a8264f3eb59531e8c4c0303f96",
        "Requirements": [
          "cpp11",
          "forcats",
          "hms",
          "readr",
          "rlang",
          "tibble",
          "tidyselect",
          "vctrs"
        ]
      },
      "here": {
        "Package": "here",
        "Version": "1.0.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "24b224366f9c2e7534d2344d10d59211",
        "Requirements": [
          "rprojroot"
        ]
      },
      "highr": {
        "Package": "highr",
        "Version": "0.9",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8eb36c8125038e648e5d111c0d7b2ed4",
        "Requirements": [
          "xfun"
        ]
      },
      "hms": {
        "Package": "hms",
        "Version": "1.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5b8a2dd0fdbe2ab4f6081e6c7be6dfca",
        "Requirements": [
          "ellipsis",
          "lifecycle",
          "pkgconfig",
          "rlang",
          "vctrs"
        ]
      },
      "htmltools": {
        "Package": "htmltools",
        "Version": "0.5.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "526c484233f42522278ab06fb185cb26",
        "Requirements": [
          "base64enc",
          "digest",
          "fastmap",
          "rlang"
        ]
      },
      "htmlwidgets": {
        "Package": "htmlwidgets",
        "Version": "1.5.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "76147821cd3fcd8c4b04e1ef0498e7fb",
        "Requirements": [
          "htmltools",
          "jsonlite",
          "yaml"
        ]
      },
      "httpuv": {
        "Package": "httpuv",
        "Version": "1.6.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "97fe71f0a4a1c9890e6c2128afa04bc0",
        "Requirements": [
          "R6",
          "Rcpp",
          "later",
          "promises"
        ]
      },
      "httr": {
        "Package": "httr",
        "Version": "1.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a525aba14184fec243f9eaec62fbed43",
        "Requirements": [
          "R6",
          "curl",
          "jsonlite",
          "mime",
          "openssl"
        ]
      },
      "huxtable": {
        "Package": "huxtable",
        "Version": "5.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "633926f3332d7a937ff16a8a98aa2192",
        "Requirements": [
          "R6",
          "assertthat",
          "commonmark",
          "generics",
          "glue",
          "memoise",
          "rlang",
          "stringi",
          "stringr",
          "tidyselect",
          "xml2"
        ]
      },
      "ini": {
        "Package": "ini",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6154ec2223172bce8162d4153cda21f7",
        "Requirements": []
      },
      "isoband": {
        "Package": "isoband",
        "Version": "0.2.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7ab57a6de7f48a8dc84910d1eca42883",
        "Requirements": []
      },
      "jquerylib": {
        "Package": "jquerylib",
        "Version": "0.1.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5aab57a3bd297eee1c1d862735972182",
        "Requirements": [
          "htmltools"
        ]
      },
      "jsonlite": {
        "Package": "jsonlite",
        "Version": "1.7.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "68c37fd8f863c6273dcd24928c17d6e1",
        "Requirements": []
      },
      "kableExtra": {
        "Package": "kableExtra",
        "Version": "1.3.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "49b625e6aabe4c5f091f5850aba8ff78",
        "Requirements": [
          "digest",
          "glue",
          "htmltools",
          "knitr",
          "magrittr",
          "rmarkdown",
          "rstudioapi",
          "rvest",
          "scales",
          "stringr",
          "svglite",
          "viridisLite",
          "webshot",
          "xml2"
        ]
      },
      "knitr": {
        "Package": "knitr",
        "Version": "1.40",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "caea8b0f899a0b1738444b9bc47067e7",
        "Requirements": [
          "evaluate",
          "highr",
          "stringr",
          "xfun",
          "yaml"
        ]
      },
      "labeling": {
        "Package": "labeling",
        "Version": "0.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "3d5108641f47470611a32d0bdf357a72",
        "Requirements": []
      },
      "later": {
        "Package": "later",
        "Version": "1.3.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7e7b457d7766bc47f2a5f21cc2984f8e",
        "Requirements": [
          "Rcpp",
          "rlang"
        ]
      },
      "lattice": {
        "Package": "lattice",
        "Version": "0.20-45",
        "Source": "Repository",
        "Repository": "CRAN",
        "Hash": "b64cdbb2b340437c4ee047a1f4c4377b",
        "Requirements": []
      },
      "lifecycle": {
        "Package": "lifecycle",
        "Version": "1.0.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a6b6d352e3ed897373ab19d8395c98d0",
        "Requirements": [
          "glue",
          "rlang"
        ]
      },
      "logger": {
        "Package": "logger",
        "Version": "0.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c269b06beb2bbadb0d058c0e6fa4ec3d",
        "Requirements": []
      },
      "magrittr": {
        "Package": "magrittr",
        "Version": "2.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "cdc87ecd81934679d1557633d8e1fe51",
        "Requirements": []
      },
      "markdown": {
        "Package": "markdown",
        "Version": "1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "61e4a10781dd00d7d81dd06ca9b94e95",
        "Requirements": [
          "mime",
          "xfun"
        ]
      },
      "memoise": {
        "Package": "memoise",
        "Version": "2.0.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e2817ccf4a065c5d9d7f2cfbe7c1d78c",
        "Requirements": [
          "cachem",
          "rlang"
        ]
      },
      "mgcv": {
        "Package": "mgcv",
        "Version": "1.8-38",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "be3c61ffbb1e3d3b3df214d192ac5444",
        "Requirements": [
          "Matrix",
          "nlme"
        ]
      },
      "mime": {
        "Package": "mime",
        "Version": "0.12",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "18e9c28c1d3ca1560ce30658b22ce104",
        "Requirements": []
      },
      "munsell": {
        "Package": "munsell",
        "Version": "0.5.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6dfe8bf774944bd5595785e3229d8771",
        "Requirements": [
          "colorspace"
        ]
      },
      "mvtnorm": {
        "Package": "mvtnorm",
        "Version": "1.1-3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7a7541cc284cb2ba3ba7eae645892af5",
        "Requirements": []
      },
      "nlme": {
        "Package": "nlme",
        "Version": "3.1-153",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "2d632e0d963a653a0329756ce701ecdd",
        "Requirements": [
          "lattice"
        ]
      },
      "numDeriv": {
        "Package": "numDeriv",
        "Version": "2016.8-1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "df58958f293b166e4ab885ebcad90e02",
        "Requirements": []
      },
      "openssl": {
        "Package": "openssl",
        "Version": "2.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6d3bef2e305f55c705c674653c7d7d3d",
        "Requirements": [
          "askpass"
        ]
      },
      "packrat": {
        "Package": "packrat",
        "Version": "0.8.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d84055adcb6bb1f4f0ce8c5f235bc328",
        "Requirements": []
      },
      "pillar": {
        "Package": "pillar",
        "Version": "1.6.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "464a3e015331eeb8efd1d239cad5128d",
        "Requirements": [
          "cli",
          "crayon",
          "ellipsis",
          "fansi",
          "glue",
          "lifecycle",
          "rlang",
          "utf8",
          "vctrs"
        ]
      },
      "pilot2wrappers": {
        "Package": "pilot2wrappers",
        "Version": "0.5.0",
        "Source": "Cellar",
        "Hash": "bf64790de80f08f677c361054eaceb7b",
        "Requirements": [
          "Tplyr",
          "config",
          "cowplot",
          "dplyr",
          "emmeans",
          "ggplot2",
          "glue",
          "golem",
          "haven",
          "htmltools",
          "huxtable",
          "magrittr",
          "markdown",
          "pkgload",
          "purrr",
          "reactable",
          "rtables",
          "shiny",
          "stringr",
          "teal",
          "teal.data",
          "tibble",
          "tidyr",
          "tippy",
          "visR"
        ]
      },
      "pkgbuild": {
        "Package": "pkgbuild",
        "Version": "1.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "66d2adfed274daf81ccfe77d974c3b9b",
        "Requirements": [
          "R6",
          "callr",
          "cli",
          "crayon",
          "desc",
          "prettyunits",
          "rprojroot",
          "withr"
        ]
      },
      "pkgconfig": {
        "Package": "pkgconfig",
        "Version": "2.0.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "01f28d4278f15c76cddbea05899c5d6f",
        "Requirements": []
      },
      "pkgdown": {
        "Package": "pkgdown",
        "Version": "2.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "1ef66f10b752bb5f17e33fe9fa861005",
        "Requirements": [
          "bslib",
          "callr",
          "crayon",
          "desc",
          "digest",
          "downlit",
          "fs",
          "httr",
          "jsonlite",
          "magrittr",
          "memoise",
          "purrr",
          "ragg",
          "rlang",
          "rmarkdown",
          "tibble",
          "whisker",
          "withr",
          "xml2",
          "yaml"
        ]
      },
      "pkglite": {
        "Package": "pkglite",
        "Version": "0.2.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "10103029c41084775f6f0a839302cdd4",
        "Requirements": [
          "cli",
          "magrittr",
          "remotes"
        ]
      },
      "pkgload": {
        "Package": "pkgload",
        "Version": "1.2.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7533cd805940821bf23eaf3c8d4c1735",
        "Requirements": [
          "cli",
          "crayon",
          "desc",
          "rlang",
          "rprojroot",
          "rstudioapi",
          "withr"
        ]
      },
      "praise": {
        "Package": "praise",
        "Version": "1.0.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a555924add98c99d2f411e37e7d25e9f",
        "Requirements": []
      },
      "prettyunits": {
        "Package": "prettyunits",
        "Version": "1.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "95ef9167b75dde9d2ccc3c7528393e7e",
        "Requirements": []
      },
      "processx": {
        "Package": "processx",
        "Version": "3.5.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0cbca2bc4d16525d009c4dbba156b37c",
        "Requirements": [
          "R6",
          "ps"
        ]
      },
      "progress": {
        "Package": "progress",
        "Version": "1.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "14dc9f7a3c91ebb14ec5bb9208a07061",
        "Requirements": [
          "R6",
          "crayon",
          "hms",
          "prettyunits"
        ]
      },
      "promises": {
        "Package": "promises",
        "Version": "1.2.0.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4ab2c43adb4d4699cf3690acd378d75d",
        "Requirements": [
          "R6",
          "Rcpp",
          "later",
          "magrittr",
          "rlang"
        ]
      },
      "ps": {
        "Package": "ps",
        "Version": "1.6.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "32620e2001c1dce1af49c49dccbb9420",
        "Requirements": []
      },
      "purrr": {
        "Package": "purrr",
        "Version": "0.3.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "97def703420c8ab10d8f0e6c72101e02",
        "Requirements": [
          "magrittr",
          "rlang"
        ]
      },
      "ragg": {
        "Package": "ragg",
        "Version": "1.2.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4577b3859de34ffb2938d9a878dcf384",
        "Requirements": [
          "systemfonts",
          "textshaping"
        ]
      },
      "rappdirs": {
        "Package": "rappdirs",
        "Version": "0.3.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5e3c5dc0b071b21fa128676560dbe94d",
        "Requirements": []
      },
      "rcmdcheck": {
        "Package": "rcmdcheck",
        "Version": "1.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8f25ebe2ec38b1f2aef3b0d2ef76f6c4",
        "Requirements": [
          "R6",
          "callr",
          "cli",
          "curl",
          "desc",
          "digest",
          "pkgbuild",
          "prettyunits",
          "rprojroot",
          "sessioninfo",
          "withr",
          "xopen"
        ]
      },
      "reactR": {
        "Package": "reactR",
        "Version": "0.4.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "75389c8091eb14ee21c6bc87a88b3809",
        "Requirements": [
          "htmltools"
        ]
      },
      "reactable": {
        "Package": "reactable",
        "Version": "0.2.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ac1afe50d1c77470a72971a07fd146b1",
        "Requirements": [
          "digest",
          "htmltools",
          "htmlwidgets",
          "jsonlite",
          "reactR"
        ]
      },
      "readr": {
        "Package": "readr",
        "Version": "2.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "9c59de1357dc209868b5feb5c9f0fe2f",
        "Requirements": [
          "R6",
          "cli",
          "clipr",
          "cpp11",
          "crayon",
          "hms",
          "lifecycle",
          "rlang",
          "tibble",
          "tzdb",
          "vroom"
        ]
      },
      "rematch2": {
        "Package": "rematch2",
        "Version": "2.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "76c9e04c712a05848ae7a23d2f170a40",
        "Requirements": [
          "tibble"
        ]
      },
      "remotes": {
        "Package": "remotes",
        "Version": "2.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "227045be9aee47e6dda9bb38ac870d67",
        "Requirements": []
      },
      "renv": {
        "Package": "renv",
        "Version": "0.15.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "206c4ef8b7ad6fb1060d69aa7b9dfe69",
        "Requirements": []
      },
      "rlang": {
        "Package": "rlang",
        "Version": "1.0.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "971c3d698fc06dabdac6bc4bcda72dc4",
        "Requirements": []
      },
      "rmarkdown": {
        "Package": "rmarkdown",
        "Version": "2.16",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0f3eaa1547e2c6880d4de1c043ac6826",
        "Requirements": [
          "bslib",
          "evaluate",
          "htmltools",
          "jquerylib",
          "jsonlite",
          "knitr",
          "stringr",
          "tinytex",
          "xfun",
          "yaml"
        ]
      },
      "roxygen2": {
        "Package": "roxygen2",
        "Version": "7.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "eb9849556c4250305106e82edae35b72",
        "Requirements": [
          "R6",
          "brew",
          "commonmark",
          "cpp11",
          "desc",
          "digest",
          "knitr",
          "pkgload",
          "purrr",
          "rlang",
          "stringi",
          "stringr",
          "xml2"
        ]
      },
      "rprojroot": {
        "Package": "rprojroot",
        "Version": "2.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "249d8cd1e74a8f6a26194a91b47f21d1",
        "Requirements": []
      },
      "rsconnect": {
        "Package": "rsconnect",
        "Version": "0.8.27",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "114103fbb50af041e93921ee67db8fa0",
        "Requirements": [
          "curl",
          "digest",
          "jsonlite",
          "openssl",
          "packrat",
          "rstudioapi",
          "yaml"
        ]
      },
      "rstudioapi": {
        "Package": "rstudioapi",
        "Version": "0.13",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "06c85365a03fdaf699966cc1d3cf53ea",
        "Requirements": []
      },
      "rtables": {
        "Package": "rtables",
        "Version": "0.5.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "645b3b0221c4bbb464025b480be98d42",
        "Requirements": [
          "formatters",
          "htmltools",
          "magrittr"
        ]
      },
      "rversions": {
        "Package": "rversions",
        "Version": "2.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f88fab00907b312f8b23ec13e2d437cb",
        "Requirements": [
          "curl",
          "xml2"
        ]
      },
      "rvest": {
        "Package": "rvest",
        "Version": "1.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bb099886deffecd6f9b298b7d4492943",
        "Requirements": [
          "httr",
          "lifecycle",
          "magrittr",
          "rlang",
          "selectr",
          "tibble",
          "xml2"
        ]
      },
      "sass": {
        "Package": "sass",
        "Version": "0.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "1b191143d7d3444d504277843f3a95fe",
        "Requirements": [
          "R6",
          "fs",
          "htmltools",
          "rappdirs",
          "rlang"
        ]
      },
      "scales": {
        "Package": "scales",
        "Version": "1.2.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "906cb23d2f1c5680b8ce439b44c6fa63",
        "Requirements": [
          "R6",
          "RColorBrewer",
          "farver",
          "labeling",
          "lifecycle",
          "munsell",
          "rlang",
          "viridisLite"
        ]
      },
      "selectr": {
        "Package": "selectr",
        "Version": "0.4-2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "3838071b66e0c566d55cc26bd6e27bf4",
        "Requirements": [
          "R6",
          "stringr"
        ]
      },
      "sessioninfo": {
        "Package": "sessioninfo",
        "Version": "1.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "3f9796a8d0a0e8c6eb49a4b029359d1f",
        "Requirements": [
          "cli"
        ]
      },
      "shiny": {
        "Package": "shiny",
        "Version": "1.7.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "00344c227c7bd0ab5d78052c5d736c44",
        "Requirements": [
          "R6",
          "bslib",
          "cachem",
          "commonmark",
          "crayon",
          "ellipsis",
          "fastmap",
          "fontawesome",
          "glue",
          "htmltools",
          "httpuv",
          "jsonlite",
          "later",
          "lifecycle",
          "mime",
          "promises",
          "rlang",
          "sourcetools",
          "withr",
          "xtable"
        ]
      },
      "shinyWidgets": {
        "Package": "shinyWidgets",
        "Version": "0.6.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "89b90f439e5a824f8bcbadd082106902",
        "Requirements": [
          "bslib",
          "htmltools",
          "jsonlite",
          "sass",
          "shiny"
        ]
      },
      "shinyjs": {
        "Package": "shinyjs",
        "Version": "2.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "802e4786b353a4bb27116957558548d5",
        "Requirements": [
          "digest",
          "jsonlite",
          "shiny"
        ]
      },
      "sourcetools": {
        "Package": "sourcetools",
        "Version": "0.1.7",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "947e4e02a79effa5d512473e10f41797",
        "Requirements": []
      },
      "stringi": {
        "Package": "stringi",
        "Version": "1.7.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bba431031d30789535745a9627ac9271",
        "Requirements": []
      },
      "stringr": {
        "Package": "stringr",
        "Version": "1.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0759e6b6c0957edb1311028a49a35e76",
        "Requirements": [
          "glue",
          "magrittr",
          "stringi"
        ]
      },
      "styler": {
        "Package": "styler",
        "Version": "1.6.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d9e85c794c5a723aabed32a49926186a",
        "Requirements": [
          "R.cache",
          "backports",
          "cli",
          "glue",
          "magrittr",
          "purrr",
          "rematch2",
          "rlang",
          "rprojroot",
          "tibble",
          "withr",
          "xfun"
        ]
      },
      "survival": {
        "Package": "survival",
        "Version": "3.4-0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "04411ae66ab4659230c067c32966fc20",
        "Requirements": [
          "Matrix"
        ]
      },
      "svglite": {
        "Package": "svglite",
        "Version": "2.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "68dfdf211af6aa4e5f050f064f64d401",
        "Requirements": [
          "cpp11",
          "systemfonts"
        ]
      },
      "sys": {
        "Package": "sys",
        "Version": "3.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "b227d13e29222b4574486cfcbde077fa",
        "Requirements": []
      },
      "systemfonts": {
        "Package": "systemfonts",
        "Version": "1.0.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5be9fcf8ef6763e8cb13ab009e273a1d",
        "Requirements": [
          "cpp11"
        ]
      },
      "teal": {
        "Package": "teal",
        "Version": "0.11.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ad79297c93bd654f51e19a4b879f69b5",
        "Requirements": [
          "checkmate",
          "lifecycle",
          "logger",
          "magrittr",
          "rlang",
          "shiny",
          "shinyjs",
          "styler",
          "teal.code",
          "teal.data",
          "teal.logger",
          "teal.reporter",
          "teal.slice",
          "teal.transform"
        ]
      },
      "teal.code": {
        "Package": "teal.code",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "cf26b243e9767770ed2a4dce6b9879ab",
        "Requirements": [
          "R6",
          "checkmate",
          "crayon",
          "lifecycle",
          "shiny",
          "styler",
          "teal.widgets"
        ]
      },
      "teal.data": {
        "Package": "teal.data",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "afb508138f843ee8c45c8899a9a746e9",
        "Requirements": [
          "R6",
          "checkmate",
          "digest",
          "formatters",
          "lifecycle",
          "logger",
          "rlang",
          "shiny",
          "shinyjs",
          "teal.logger",
          "yaml"
        ]
      },
      "teal.logger": {
        "Package": "teal.logger",
        "Version": "0.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7c4547a5c24944a9f6aa8625c36677cc",
        "Requirements": [
          "glue",
          "lifecycle",
          "logger",
          "shiny",
          "withr"
        ]
      },
      "teal.reporter": {
        "Package": "teal.reporter",
        "Version": "0.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d571e15e0572499696a3d2ab144d8210",
        "Requirements": [
          "R6",
          "checkmate",
          "knitr",
          "lifecycle",
          "rmarkdown",
          "shiny",
          "shinyWidgets",
          "yaml",
          "zip"
        ]
      },
      "teal.slice": {
        "Package": "teal.slice",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d3e274b20a2846c7887f7e60fe9240af",
        "Requirements": [
          "R6",
          "checkmate",
          "dplyr",
          "ggplot2",
          "lifecycle",
          "logger",
          "shiny",
          "shinyWidgets",
          "shinyjs",
          "teal.data",
          "teal.logger",
          "teal.widgets"
        ]
      },
      "teal.transform": {
        "Package": "teal.transform",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4f7e157538d6e6191381d665fdfbdc41",
        "Requirements": [
          "checkmate",
          "dplyr",
          "formatters",
          "lifecycle",
          "logger",
          "magrittr",
          "rlang",
          "shiny",
          "shinyjs",
          "teal.code",
          "teal.data",
          "teal.logger",
          "teal.slice",
          "teal.widgets",
          "tidyr",
          "tidyselect"
        ]
      },
      "teal.widgets": {
        "Package": "teal.widgets",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e8225307ddc054a7bddeba9a2b5dd1ee",
        "Requirements": [
          "checkmate",
          "ggplot2",
          "lifecycle",
          "rtables",
          "shiny",
          "shinyWidgets",
          "shinyjs"
        ]
      },
      "testthat": {
        "Package": "testthat",
        "Version": "3.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "32454e5780e8dbe31e4b61b13d8918fe",
        "Requirements": [
          "R6",
          "brio",
          "callr",
          "cli",
          "crayon",
          "desc",
          "digest",
          "ellipsis",
          "evaluate",
          "jsonlite",
          "lifecycle",
          "magrittr",
          "pkgload",
          "praise",
          "processx",
          "ps",
          "rlang",
          "waldo",
          "withr"
        ]
      },
      "textshaping": {
        "Package": "textshaping",
        "Version": "0.3.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "1ab6223d3670fac7143202cb6a2d43d5",
        "Requirements": [
          "cpp11",
          "systemfonts"
        ]
      },
      "tibble": {
        "Package": "tibble",
        "Version": "3.1.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8a8f02d1934dfd6431c671361510dd0b",
        "Requirements": [
          "ellipsis",
          "fansi",
          "lifecycle",
          "magrittr",
          "pillar",
          "pkgconfig",
          "rlang",
          "vctrs"
        ]
      },
      "tidyr": {
        "Package": "tidyr",
        "Version": "1.1.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c8fbdbd9fcac223d6c6fe8e406f368e1",
        "Requirements": [
          "cpp11",
          "dplyr",
          "ellipsis",
          "glue",
          "lifecycle",
          "magrittr",
          "purrr",
          "rlang",
          "tibble",
          "tidyselect",
          "vctrs"
        ]
      },
      "tidyselect": {
        "Package": "tidyselect",
        "Version": "1.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7243004a708d06d4716717fa1ff5b2fe",
        "Requirements": [
          "ellipsis",
          "glue",
          "purrr",
          "rlang",
          "vctrs"
        ]
      },
      "tinytex": {
        "Package": "tinytex",
        "Version": "0.36",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "130fe4c61e55b271a2655b3a284a205f",
        "Requirements": [
          "xfun"
        ]
      },
      "tippy": {
        "Package": "tippy",
        "Version": "0.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "39b1d69229e30314e7cba023c777f52d",
        "Requirements": [
          "htmltools",
          "htmlwidgets",
          "jsonlite",
          "shiny"
        ]
      },
      "tzdb": {
        "Package": "tzdb",
        "Version": "0.2.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5e069fb033daf2317bd628d3100b75c5",
        "Requirements": [
          "cpp11"
        ]
      },
      "usethis": {
        "Package": "usethis",
        "Version": "2.1.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c499f488e6dd7718accffaee5bc5a79b",
        "Requirements": [
          "cli",
          "clipr",
          "crayon",
          "curl",
          "desc",
          "fs",
          "gert",
          "gh",
          "glue",
          "jsonlite",
          "lifecycle",
          "purrr",
          "rappdirs",
          "rlang",
          "rprojroot",
          "rstudioapi",
          "whisker",
          "withr",
          "yaml"
        ]
      },
      "utf8": {
        "Package": "utf8",
        "Version": "1.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c9c462b759a5cc844ae25b5942654d13",
        "Requirements": []
      },
      "vctrs": {
        "Package": "vctrs",
        "Version": "0.4.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8b54f22e2a58c4f275479c92ce041a57",
        "Requirements": [
          "cli",
          "glue",
          "rlang"
        ]
      },
      "viridisLite": {
        "Package": "viridisLite",
        "Version": "0.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "55e157e2aa88161bdb0754218470d204",
        "Requirements": []
      },
      "visR": {
        "Package": "visR",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e36599eac2186990f8ce45b71976206b",
        "Requirements": [
          "broom",
          "cowplot",
          "dplyr",
          "ggplot2",
          "gridExtra",
          "gtable",
          "kableExtra",
          "rlang",
          "survival",
          "tidyr"
        ]
      },
      "vroom": {
        "Package": "vroom",
        "Version": "1.5.7",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "976507b5a105bc3bdf6a5a5f29e0684f",
        "Requirements": [
          "bit64",
          "cli",
          "cpp11",
          "crayon",
          "glue",
          "hms",
          "lifecycle",
          "progress",
          "rlang",
          "tibble",
          "tidyselect",
          "tzdb",
          "vctrs",
          "withr"
        ]
      },
      "waldo": {
        "Package": "waldo",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ad8cfff5694ac5b3c354f8f2044bd976",
        "Requirements": [
          "cli",
          "diffobj",
          "fansi",
          "glue",
          "rematch2",
          "rlang",
          "tibble"
        ]
      },
      "webshot": {
        "Package": "webshot",
        "Version": "0.5.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e99d80ad34457a4853674e89d5e806de",
        "Requirements": [
          "callr",
          "jsonlite",
          "magrittr"
        ]
      },
      "whisker": {
        "Package": "whisker",
        "Version": "0.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ca970b96d894e90397ed20637a0c1bbe",
        "Requirements": []
      },
      "withr": {
        "Package": "withr",
        "Version": "2.4.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a376b424c4817cda4920bbbeb3364e85",
        "Requirements": []
      },
      "xfun": {
        "Package": "xfun",
        "Version": "0.32",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0498af3034691dde715dcd86198efe75",
        "Requirements": []
      },
      "xml2": {
        "Package": "xml2",
        "Version": "1.3.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "40682ed6a969ea5abfd351eb67833adc",
        "Requirements": []
      },
      "xopen": {
        "Package": "xopen",
        "Version": "1.0.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6c85f015dee9cc7710ddd20f86881f58",
        "Requirements": [
          "processx"
        ]
      },
      "xtable": {
        "Package": "xtable",
        "Version": "1.8-4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "b8acdf8af494d9ec19ccb2481a9b11c2",
        "Requirements": []
      },
      "yaml": {
        "Package": "yaml",
        "Version": "2.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4597f73aad7d32c2913ec33a345f900b",
        "Requirements": []
      },
      "zip": {
        "Package": "zip",
        "Version": "2.2.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c7eef2996ac270a18c2715c997a727c5",
        "Requirements": []
      }
    }
  }

Package: pilot2wrappers
File: renv/activate.R
Format: text
Content:
  
  local({
  
    # the requested version of renv
    version <- "0.15.2"
  
    # the project directory
    project <- getwd()
  
    # figure out whether the autoloader is enabled
    enabled <- local({
  
      # first, check config option
      override <- getOption("renv.config.autoloader.enabled")
      if (!is.null(override))
        return(override)
  
      # next, check environment variables
      # TODO: prefer using the configuration one in the future
      envvars <- c(
        "RENV_CONFIG_AUTOLOADER_ENABLED",
        "RENV_AUTOLOADER_ENABLED",
        "RENV_ACTIVATE_PROJECT"
      )
  
      for (envvar in envvars) {
        envval <- Sys.getenv(envvar, unset = NA)
        if (!is.na(envval))
          return(tolower(envval) %in% c("true", "t", "1"))
      }
  
      # enable by default
      TRUE
  
    })
  
    if (!enabled)
      return(FALSE)
  
    # avoid recursion
    if (identical(getOption("renv.autoloader.running"), TRUE)) {
      warning("ignoring recursive attempt to run renv autoloader")
      return(invisible(TRUE))
    }
  
    # signal that we're loading renv during R startup
    options(renv.autoloader.running = TRUE)
    on.exit(options(renv.autoloader.running = NULL), add = TRUE)
  
    # signal that we've consented to use renv
    options(renv.consent = TRUE)
  
    # load the 'utils' package eagerly -- this ensures that renv shims, which
    # mask 'utils' packages, will come first on the search path
    library(utils, lib.loc = .Library)
  
    # check to see if renv has already been loaded
    if ("renv" %in% loadedNamespaces()) {
  
      # if renv has already been loaded, and it's the requested version of renv,
      # nothing to do
      spec <- .getNamespaceInfo(.getNamespace("renv"), "spec")
      if (identical(spec[["version"]], version))
        return(invisible(TRUE))
  
      # otherwise, unload and attempt to load the correct version of renv
      unloadNamespace("renv")
  
    }
  
    # load bootstrap tools   
    `%||%` <- function(x, y) {
      if (is.environment(x) || length(x)) x else y
    }
    
    bootstrap <- function(version, library) {
    
      # attempt to download renv
      tarball <- tryCatch(renv_bootstrap_download(version), error = identity)
      if (inherits(tarball, "error"))
        stop("failed to download renv ", version)
    
      # now attempt to install
      status <- tryCatch(renv_bootstrap_install(version, tarball, library), error = identity)
      if (inherits(status, "error"))
        stop("failed to install renv ", version)
    
    }
    
    renv_bootstrap_tests_running <- function() {
      getOption("renv.tests.running", default = FALSE)
    }
    
    renv_bootstrap_repos <- function() {
    
      # check for repos override
      repos <- Sys.getenv("RENV_CONFIG_REPOS_OVERRIDE", unset = NA)
      if (!is.na(repos))
        return(repos)
    
      # check for lockfile repositories
      repos <- tryCatch(renv_bootstrap_repos_lockfile(), error = identity)
      if (!inherits(repos, "error") && length(repos))
        return(repos)
    
      # if we're testing, re-use the test repositories
      if (renv_bootstrap_tests_running())
        return(getOption("renv.tests.repos"))
    
      # retrieve current repos
      repos <- getOption("repos")
    
      # ensure @CRAN@ entries are resolved
      repos[repos == "@CRAN@"] <- getOption(
        "renv.repos.cran",
        "https://cloud.r-project.org"
      )
    
      # add in renv.bootstrap.repos if set
      default <- c(FALLBACK = "https://cloud.r-project.org")
      extra <- getOption("renv.bootstrap.repos", default = default)
      repos <- c(repos, extra)
    
      # remove duplicates that might've snuck in
      dupes <- duplicated(repos) | duplicated(names(repos))
      repos[!dupes]
    
    }
    
    renv_bootstrap_repos_lockfile <- function() {
    
      lockpath <- Sys.getenv("RENV_PATHS_LOCKFILE", unset = "renv.lock")
      if (!file.exists(lockpath))
        return(NULL)
    
      lockfile <- tryCatch(renv_json_read(lockpath), error = identity)
      if (inherits(lockfile, "error")) {
        warning(lockfile)
        return(NULL)
      }
    
      repos <- lockfile$R$Repositories
      if (length(repos) == 0)
        return(NULL)
    
      keys <- vapply(repos, `[[`, "Name", FUN.VALUE = character(1))
      vals <- vapply(repos, `[[`, "URL", FUN.VALUE = character(1))
      names(vals) <- keys
    
      return(vals)
    
    }
    
    renv_bootstrap_download <- function(version) {
    
      # if the renv version number has 4 components, assume it must
      # be retrieved via github
      nv <- numeric_version(version)
      components <- unclass(nv)[[1]]
    
      methods <- if (length(components) == 4L) {
        list(
          renv_bootstrap_download_github
        )
      } else {
        list(
          renv_bootstrap_download_cran_latest,
          renv_bootstrap_download_cran_archive
        )
      }
    
      for (method in methods) {
        path <- tryCatch(method(version), error = identity)
        if (is.character(path) && file.exists(path))
          return(path)
      }
    
      stop("failed to download renv ", version)
    
    }
    
    renv_bootstrap_download_impl <- function(url, destfile) {
    
      mode <- "wb"
    
      # https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17715
      fixup <-
        Sys.info()[["sysname"]] == "Windows" &&
        substring(url, 1L, 5L) == "file:"
    
      if (fixup)
        mode <- "w+b"
    
      utils::download.file(
        url      = url,
        destfile = destfile,
        mode     = mode,
        quiet    = TRUE
      )
    
    }
    
    renv_bootstrap_download_cran_latest <- function(version) {
    
      spec <- renv_bootstrap_download_cran_latest_find(version)
    
      message("* Downloading renv ", version, " ... ", appendLF = FALSE)
    
      type  <- spec$type
      repos <- spec$repos
    
      info <- tryCatch(
        utils::download.packages(
          pkgs    = "renv",
          destdir = tempdir(),
          repos   = repos,
          type    = type,
          quiet   = TRUE
        ),
        condition = identity
      )
    
      if (inherits(info, "condition")) {
        message("FAILED")
        return(FALSE)
      }
    
      # report success and return
      message("OK (downloaded ", type, ")")
      info[1, 2]
    
    }
    
    renv_bootstrap_download_cran_latest_find <- function(version) {
    
      # check whether binaries are supported on this system
      binary <-
        getOption("renv.bootstrap.binary", default = TRUE) &&
        !identical(.Platform$pkgType, "source") &&
        !identical(getOption("pkgType"), "source") &&
        Sys.info()[["sysname"]] %in% c("Darwin", "Windows")
    
      types <- c(if (binary) "binary", "source")
    
      # iterate over types + repositories
      for (type in types) {
        for (repos in renv_bootstrap_repos()) {
    
          # retrieve package database
          db <- tryCatch(
            as.data.frame(
              utils::available.packages(type = type, repos = repos),
              stringsAsFactors = FALSE
            ),
            error = identity
          )
    
          if (inherits(db, "error"))
            next
    
          # check for compatible entry
          entry <- db[db$Package %in% "renv" & db$Version %in% version, ]
          if (nrow(entry) == 0)
            next
    
          # found it; return spec to caller
          spec <- list(entry = entry, type = type, repos = repos)
          return(spec)
    
        }
      }
    
      # if we got here, we failed to find renv
      fmt <- "renv %s is not available from your declared package repositories"
      stop(sprintf(fmt, version))
    
    }
    
    renv_bootstrap_download_cran_archive <- function(version) {
    
      name <- sprintf("renv_%s.tar.gz", version)
      repos <- renv_bootstrap_repos()
      urls <- file.path(repos, "src/contrib/Archive/renv", name)
      destfile <- file.path(tempdir(), name)
    
      message("* Downloading renv ", version, " ... ", appendLF = FALSE)
    
      for (url in urls) {
    
        status <- tryCatch(
          renv_bootstrap_download_impl(url, destfile),
          condition = identity
        )
    
        if (identical(status, 0L)) {
          message("OK")
          return(destfile)
        }
    
      }
    
      message("FAILED")
      return(FALSE)
    
    }
    
    renv_bootstrap_download_github <- function(version) {
    
      enabled <- Sys.getenv("RENV_BOOTSTRAP_FROM_GITHUB", unset = "TRUE")
      if (!identical(enabled, "TRUE"))
        return(FALSE)
    
      # prepare download options
      pat <- Sys.getenv("GITHUB_PAT")
      if (nzchar(Sys.which("curl")) && nzchar(pat)) {
        fmt <- "--location --fail --header \"Authorization: token %s\""
        extra <- sprintf(fmt, pat)
        saved <- options("download.file.method", "download.file.extra")
        options(download.file.method = "curl", download.file.extra = extra)
        on.exit(do.call(base::options, saved), add = TRUE)
      } else if (nzchar(Sys.which("wget")) && nzchar(pat)) {
        fmt <- "--header=\"Authorization: token %s\""
        extra <- sprintf(fmt, pat)
        saved <- options("download.file.method", "download.file.extra")
        options(download.file.method = "wget", download.file.extra = extra)
        on.exit(do.call(base::options, saved), add = TRUE)
      }
    
      message("* Downloading renv ", version, " from GitHub ... ", appendLF = FALSE)
    
      url <- file.path("https://api.github.com/repos/rstudio/renv/tarball", version)
      name <- sprintf("renv_%s.tar.gz", version)
      destfile <- file.path(tempdir(), name)
    
      status <- tryCatch(
        renv_bootstrap_download_impl(url, destfile),
        condition = identity
      )
    
      if (!identical(status, 0L)) {
        message("FAILED")
        return(FALSE)
      }
    
      message("OK")
      return(destfile)
    
    }
    
    renv_bootstrap_install <- function(version, tarball, library) {
    
      # attempt to install it into project library
      message("* Installing renv ", version, " ... ", appendLF = FALSE)
      dir.create(library, showWarnings = FALSE, recursive = TRUE)
    
      # invoke using system2 so we can capture and report output
      bin <- R.home("bin")
      exe <- if (Sys.info()[["sysname"]] == "Windows") "R.exe" else "R"
      r <- file.path(bin, exe)
      args <- c("--vanilla", "CMD", "INSTALL", "--no-multiarch", "-l", shQuote(library), shQuote(tarball))
      output <- system2(r, args, stdout = TRUE, stderr = TRUE)
      message("Done!")
    
      # check for successful install
      status <- attr(output, "status")
      if (is.numeric(status) && !identical(status, 0L)) {
        header <- "Error installing renv:"
        lines <- paste(rep.int("=", nchar(header)), collapse = "")
        text <- c(header, lines, output)
        writeLines(text, con = stderr())
      }
    
      status
    
    }
    
    renv_bootstrap_platform_prefix <- function() {
    
      # construct version prefix
      version <- paste(R.version$major, R.version$minor, sep = ".")
      prefix <- paste("R", numeric_version(version)[1, 1:2], sep = "-")
    
      # include SVN revision for development versions of R
      # (to avoid sharing platform-specific artefacts with released versions of R)
      devel <-
        identical(R.version[["status"]],   "Under development (unstable)") ||
        identical(R.version[["nickname"]], "Unsuffered Consequences")
    
      if (devel)
        prefix <- paste(prefix, R.version[["svn rev"]], sep = "-r")
    
      # build list of path components
      components <- c(prefix, R.version$platform)
    
      # include prefix if provided by user
      prefix <- renv_bootstrap_platform_prefix_impl()
      if (!is.na(prefix) && nzchar(prefix))
        components <- c(prefix, components)
    
      # build prefix
      paste(components, collapse = "/")
    
    }
    
    renv_bootstrap_platform_prefix_impl <- function() {
    
      # if an explicit prefix has been supplied, use it
      prefix <- Sys.getenv("RENV_PATHS_PREFIX", unset = NA)
      if (!is.na(prefix))
        return(prefix)
    
      # if the user has requested an automatic prefix, generate it
      auto <- Sys.getenv("RENV_PATHS_PREFIX_AUTO", unset = NA)
      if (auto %in% c("TRUE", "True", "true", "1"))
        return(renv_bootstrap_platform_prefix_auto())
    
      # empty string on failure
      ""
    
    }
    
    renv_bootstrap_platform_prefix_auto <- function() {
    
      prefix <- tryCatch(renv_bootstrap_platform_os(), error = identity)
      if (inherits(prefix, "error") || prefix %in% "unknown") {
    
        msg <- paste(
          "failed to infer current operating system",
          "please file a bug report at https://github.com/rstudio/renv/issues",
          sep = "; "
        )
    
        warning(msg)
    
      }
    
      prefix
    
    }
    
    renv_bootstrap_platform_os <- function() {
    
      sysinfo <- Sys.info()
      sysname <- sysinfo[["sysname"]]
    
      # handle Windows + macOS up front
      if (sysname == "Windows")
        return("windows")
      else if (sysname == "Darwin")
        return("macos")
    
      # check for os-release files
      for (file in c("/etc/os-release", "/usr/lib/os-release"))
        if (file.exists(file))
          return(renv_bootstrap_platform_os_via_os_release(file, sysinfo))
    
      # check for redhat-release files
      if (file.exists("/etc/redhat-release"))
        return(renv_bootstrap_platform_os_via_redhat_release())
    
      "unknown"
    
    }
    
    renv_bootstrap_platform_os_via_os_release <- function(file, sysinfo) {
    
      # read /etc/os-release
      release <- utils::read.table(
        file             = file,
        sep              = "=",
        quote            = c("\"", "'"),
        col.names        = c("Key", "Value"),
        comment.char     = "#",
        stringsAsFactors = FALSE
      )
    
      vars <- as.list(release$Value)
      names(vars) <- release$Key
    
      # get os name
      os <- tolower(sysinfo[["sysname"]])
    
      # read id
      id <- "unknown"
      for (field in c("ID", "ID_LIKE")) {
        if (field %in% names(vars) && nzchar(vars[[field]])) {
          id <- vars[[field]]
          break
        }
      }
    
      # read version
      version <- "unknown"
      for (field in c("UBUNTU_CODENAME", "VERSION_CODENAME", "VERSION_ID", "BUILD_ID")) {
        if (field %in% names(vars) && nzchar(vars[[field]])) {
          version <- vars[[field]]
          break
        }
      }
    
      # join together
      paste(c(os, id, version), collapse = "-")
    
    }
    
    renv_bootstrap_platform_os_via_redhat_release <- function() {
    
      # read /etc/redhat-release
      contents <- readLines("/etc/redhat-release", warn = FALSE)
    
      # infer id
      id <- if (grepl("centos", contents, ignore.case = TRUE))
        "centos"
      else if (grepl("redhat", contents, ignore.case = TRUE))
        "redhat"
      else
        "unknown"
    
      # try to find a version component (very hacky)
      version <- "unknown"
    
      parts <- strsplit(contents, "[[:space:]]")[[1L]]
      for (part in parts) {
    
        nv <- tryCatch(numeric_version(part), error = identity)
        if (inherits(nv, "error"))
          next
    
        version <- nv[1, 1]
        break
    
      }
    
      paste(c("linux", id, version), collapse = "-")
    
    }
    
    renv_bootstrap_library_root_name <- function(project) {
    
      # use project name as-is if requested
      asis <- Sys.getenv("RENV_PATHS_LIBRARY_ROOT_ASIS", unset = "FALSE")
      if (asis)
        return(basename(project))
    
      # otherwise, disambiguate based on project's path
      id <- substring(renv_bootstrap_hash_text(project), 1L, 8L)
      paste(basename(project), id, sep = "-")
    
    }
    
    renv_bootstrap_library_root <- function(project) {
    
      prefix <- renv_bootstrap_profile_prefix()
    
      path <- Sys.getenv("RENV_PATHS_LIBRARY", unset = NA)
      if (!is.na(path))
        return(paste(c(path, prefix), collapse = "/"))
    
      path <- renv_bootstrap_library_root_impl(project)
      if (!is.null(path)) {
        name <- renv_bootstrap_library_root_name(project)
        return(paste(c(path, prefix, name), collapse = "/"))
      }
    
      renv_bootstrap_paths_renv("library", project = project)
    
    }
    
    renv_bootstrap_library_root_impl <- function(project) {
    
      root <- Sys.getenv("RENV_PATHS_LIBRARY_ROOT", unset = NA)
      if (!is.na(root))
        return(root)
    
      type <- renv_bootstrap_project_type(project)
      if (identical(type, "package")) {
        userdir <- renv_bootstrap_user_dir()
        return(file.path(userdir, "library"))
      }
    
    }
    
    renv_bootstrap_validate_version <- function(version) {
    
      loadedversion <- utils::packageDescription("renv", fields = "Version")
      if (version == loadedversion)
        return(TRUE)
    
      # assume four-component versions are from GitHub; three-component
      # versions are from CRAN
      components <- strsplit(loadedversion, "[.-]")[[1]]
      remote <- if (length(components) == 4L)
        paste("rstudio/renv", loadedversion, sep = "@")
      else
        paste("renv", loadedversion, sep = "@")
    
      fmt <- paste(
        "renv %1$s was loaded from project library, but this project is configured to use renv %2$s.",
        "Use `renv::record(\"%3$s\")` to record renv %1$s in the lockfile.",
        "Use `renv::restore(packages = \"renv\")` to install renv %2$s into the project library.",
        sep = "\n"
      )
    
      msg <- sprintf(fmt, loadedversion, version, remote)
      warning(msg, call. = FALSE)
    
      FALSE
    
    }
    
    renv_bootstrap_hash_text <- function(text) {
    
      hashfile <- tempfile("renv-hash-")
      on.exit(unlink(hashfile), add = TRUE)
    
      writeLines(text, con = hashfile)
      tools::md5sum(hashfile)
    
    }
    
    renv_bootstrap_load <- function(project, libpath, version) {
    
      # try to load renv from the project library
      if (!requireNamespace("renv", lib.loc = libpath, quietly = TRUE))
        return(FALSE)
    
      # warn if the version of renv loaded does not match
      renv_bootstrap_validate_version(version)
    
      # load the project
      renv::load(project)
    
      TRUE
    
    }
    
    renv_bootstrap_profile_load <- function(project) {
    
      # if RENV_PROFILE is already set, just use that
      profile <- Sys.getenv("RENV_PROFILE", unset = NA)
      if (!is.na(profile) && nzchar(profile))
        return(profile)
    
      # check for a profile file (nothing to do if it doesn't exist)
      path <- renv_bootstrap_paths_renv("profile", profile = FALSE)
      if (!file.exists(path))
        return(NULL)
    
      # read the profile, and set it if it exists
      contents <- readLines(path, warn = FALSE)
      if (length(contents) == 0L)
        return(NULL)
    
      # set RENV_PROFILE
      profile <- contents[[1L]]
      if (!profile %in% c("", "default"))
        Sys.setenv(RENV_PROFILE = profile)
    
      profile
    
    }
    
    renv_bootstrap_profile_prefix <- function() {
      profile <- renv_bootstrap_profile_get()
      if (!is.null(profile))
        return(file.path("profiles", profile, "renv"))
    }
    
    renv_bootstrap_profile_get <- function() {
      profile <- Sys.getenv("RENV_PROFILE", unset = "")
      renv_bootstrap_profile_normalize(profile)
    }
    
    renv_bootstrap_profile_set <- function(profile) {
      profile <- renv_bootstrap_profile_normalize(profile)
      if (is.null(profile))
        Sys.unsetenv("RENV_PROFILE")
      else
        Sys.setenv(RENV_PROFILE = profile)
    }
    
    renv_bootstrap_profile_normalize <- function(profile) {
    
      if (is.null(profile) || profile %in% c("", "default"))
        return(NULL)
    
      profile
    
    }
    
    renv_bootstrap_path_absolute <- function(path) {
    
      substr(path, 1L, 1L) %in% c("~", "/", "\\") || (
        substr(path, 1L, 1L) %in% c(letters, LETTERS) &&
        substr(path, 2L, 3L) %in% c(":/", ":\\")
      )
    
    }
    
    renv_bootstrap_paths_renv <- function(..., profile = TRUE, project = NULL) {
      renv <- Sys.getenv("RENV_PATHS_RENV", unset = "renv")
      root <- if (renv_bootstrap_path_absolute(renv)) NULL else project
      prefix <- if (profile) renv_bootstrap_profile_prefix()
      components <- c(root, renv, prefix, ...)
      paste(components, collapse = "/")
    }
    
    renv_bootstrap_project_type <- function(path) {
    
      descpath <- file.path(path, "DESCRIPTION")
      if (!file.exists(descpath))
        return("unknown")
    
      desc <- tryCatch(
        read.dcf(descpath, all = TRUE),
        error = identity
      )
    
      if (inherits(desc, "error"))
        return("unknown")
    
      type <- desc$Type
      if (!is.null(type))
        return(tolower(type))
    
      package <- desc$Package
      if (!is.null(package))
        return("package")
    
      "unknown"
    
    }
    
    renv_bootstrap_user_dir <- function(path) {
      dir <- renv_bootstrap_user_dir_impl(path)
      chartr("\\", "/", dir)
    }
    
    renv_bootstrap_user_dir_impl <- function(path) {
    
      # use R_user_dir if available
      tools <- asNamespace("tools")
      if (is.function(tools$R_user_dir))
        return(tools$R_user_dir("renv", "cache"))
    
      # try using our own backfill for older versions of R
      envvars <- c("R_USER_CACHE_DIR", "XDG_CACHE_HOME")
      for (envvar in envvars) {
        root <- Sys.getenv(envvar, unset = NA)
        if (!is.na(root)) {
          path <- file.path(root, "R/renv")
          return(path)
        }
      }
    
      # use platform-specific default fallbacks
      if (Sys.info()[["sysname"]] == "Windows")
        file.path(Sys.getenv("LOCALAPPDATA"), "R/cache/R/renv")
      else if (Sys.info()[["sysname"]] == "Darwin")
        "~/Library/Caches/org.R-project.R/R/renv"
      else
        "~/.cache/R/renv"
    
    }
    
    renv_json_read <- function(file = NULL, text = NULL) {
    
      text <- paste(text %||% read(file), collapse = "\n")
    
      # find strings in the JSON
      pattern <- '["](?:(?:\\\\.)|(?:[^"\\\\]))*?["]'
      locs <- gregexpr(pattern, text)[[1]]
    
      # if any are found, replace them with placeholders
      replaced <- text
      strings <- character()
      replacements <- character()
    
      if (!identical(c(locs), -1L)) {
    
        # get the string values
        starts <- locs
        ends <- locs + attr(locs, "match.length") - 1L
        strings <- substring(text, starts, ends)
    
        # only keep those requiring escaping
        strings <- grep("[[\\]{}:]", strings, perl = TRUE, value = TRUE)
    
        # compute replacements
        replacements <- sprintf('"\032%i\032"', seq_along(strings))
    
        # replace the strings
        mapply(function(string, replacement) {
          replaced <<- sub(string, replacement, replaced, fixed = TRUE)
        }, strings, replacements)
    
      }
    
      # transform the JSON into something the R parser understands
      transformed <- replaced
      transformed <- gsub("[[{]", "list(", transformed)
      transformed <- gsub("[]}]", ")", transformed)
      transformed <- gsub(":", "=", transformed, fixed = TRUE)
      text <- paste(transformed, collapse = "\n")
    
      # parse it
      json <- parse(text = text, keep.source = FALSE, srcfile = NULL)[[1L]]
    
      # construct map between source strings, replaced strings
      map <- as.character(parse(text = strings))
      names(map) <- as.character(parse(text = replacements))
    
      # convert to list
      map <- as.list(map)
    
      # remap strings in object
      remapped <- renv_json_remap(json, map)
    
      # evaluate
      eval(remapped, envir = baseenv())
    
    }
    
    renv_json_remap <- function(json, map) {
    
      # fix names
      if (!is.null(names(json))) {
        lhs <- match(names(json), names(map), nomatch = 0L)
        rhs <- match(names(map), names(json), nomatch = 0L)
        names(json)[rhs] <- map[lhs]
      }
    
      # fix values
      if (is.character(json))
        return(map[[json]] %||% json)
    
      # handle true, false, null
      if (is.name(json)) {
        text <- as.character(json)
        if (text == "true")
          return(TRUE)
        else if (text == "false")
          return(FALSE)
        else if (text == "null")
          return(NULL)
      }
    
      # recurse
      if (is.recursive(json)) {
        for (i in seq_along(json)) {
          json[i] <- list(renv_json_remap(json[[i]], map))
        }
      }
    
      json
    
    }
  
    # load the renv profile, if any
    renv_bootstrap_profile_load(project)
  
    # construct path to library root
    root <- renv_bootstrap_library_root(project)
  
    # construct library prefix for platform
    prefix <- renv_bootstrap_platform_prefix()
  
    # construct full libpath
    libpath <- file.path(root, prefix)
  
    # attempt to load
    if (renv_bootstrap_load(project, libpath, version))
      return(TRUE)
  
    # load failed; inform user we're about to bootstrap
    prefix <- paste("# Bootstrapping renv", version)
    postfix <- paste(rep.int("-", 77L - nchar(prefix)), collapse = "")
    header <- paste(prefix, postfix)
    message(header)
  
    # perform bootstrap
    bootstrap(version, libpath)
  
    # exit early if we're just testing bootstrap
    if (!is.na(Sys.getenv("RENV_BOOTSTRAP_INSTALL_ONLY", unset = NA)))
      return(TRUE)
  
    # try again to load
    if (requireNamespace("renv", lib.loc = libpath, quietly = TRUE)) {
      message("* Successfully installed and loaded renv ", version, ".")
      return(renv::load())
    }
  
    # failed to download or load renv; warn the user
    msg <- c(
      "Failed to find an renv installation: the project will not be loaded.",
      "Use `renv::activate()` to re-initialize the project."
    )
  
    warning(paste(msg, collapse = "\n"), call. = FALSE)
  
  })

Package: pilot2wrappers
File: renv/cellar/pilot2wrappers_0.5.0.tar.gz
Format: binary
Content:
  1f8b0800000000000003ed7d09901c597690882082a0020c41381c04d8deaf92349db5535d5d57774b35d39a69f521f5a8bbd5aa6e493bab11a5accaacaa1c65
  65d6e4d1877a7ad710c6b74d70d886358759db600c3e59bceb1d7bd75edb0406168cc1c72ee030182f60aeb577c11b98dde4bdf78fccac432dcd687a46bbd533
  adceccfffffbf7fbeffaeff52ddb0dca7b9edeef9b9e3fb3bcb2bd545fdbda59bbb679eab1fd14e167ae5ac5bfa5f9d962f22ffe942bf3f3a74ad54a696e767e
  76be0cf94ad5f2fcdc29563c75023fa11fe81e34c5f4acd683f21d97fe84fe6ce9ad7b7ac7acb17e6a2164760efaf051a46676acc086d73a5b721ddff5022bec
  c1cb76d8ec59be6fb90edbc2d2ac9cb90965e1bdc68a85d94231b318065dd7f39fafd7584bcb30f18315b88e965d8121cde65976537782fbf060f674cb660b2c
  1b74cd7a4bf783e73bf8a5d0727b90eab9b609892d2dab8701166b79663697cb0f817d11dae27430c7bbbb3a3da48b8e2a73c5e4256e3d6c81cb9ed971bd032c
  b3d4359d872ab3625b987fc3b26dd37ba8129b166fd6baf990cd6ab9fd03cfea748354ee56bf0bb965e65c66d9f45b9ed50f68a6d61cdff40239d52c91566090
  b36f3a868f53af5d5c60d542a950cc65d6ad9609a56aecf2d63a7dafe4326bbd3e2c0cc8d9729db6d5a1cfc542a550cae559075ad24b7d094cdde6ff160c3dd0
  f3ccef5ace81ea0e662d15e629ab17e84ddbf4f3acabef9a4e9e197dfbc0cbb31dfe27b00cfcd3b1431380041e0c98170f4b37dca7d290a1d3c7f59d87e6ede1
  539eed5a7e1dd75ccfd41d80ee997a4be4ede91dcf0a82049cc06a524a185836b624e8d981ebe263ff5ec77675031bd2ef1f6059ef9ee1ee413bfba1e77999ed
  b0d3317d1c17c3dc156502f810747568c33dc7826a98274b65569c966b401f6aecc6ceeaf4f94cdddd3fe898304bb6e5079acc06b3ba53bfb192cbd4e9cb1e4e
  a3d9eabae2bb2cb5e9063047308a05d89856c73183c0bc145ab6617a355e7566d3340d7fc9edc1eed7f97270dc8c580a468d958be5f274a9385dacb0d26cad54
  ae958bd0b0a567186243b1bb6b0cf731a34dcc6ec3c28431f6cc3b38787c2732da8694445f71afb15ba94f623731dc4af157d82f8c6f96f81bee0886db21fea4
  d63cbb0d0bfd4e6643b79c007ecd74d39e1dc62a1733a7bed47fd2687f66737163657b6b7169e571d671ccf95f2956aaf2fcafc02b9cff95f9b9f2e4fc3f899f
  33ecb2093b450f4c83350fe0cc20cc510674e5022a089869580126c016363219731f91bc963d77f15c3627dfcc76db6ae9ad8346cf354cdb57dfdbbda0d1b252
  af80f852ef4ed84bbdf777755b7d702077c373f76cbd99040b651a9057bdf7750373a9772f741ab09ad5bb6f060d3c631a7d3de8aaaf888a01653702731f4059
  74786974a6a8377164a8777110a977c2f8f26dd5737b1a3f9af496e7fafea804cf03ac678e48695a0e75625429405966630f10e38834034e05cb69052392da96
  1d98de88848ee786fd467354cb7b61000b6144c2a8ba3dd3d17ba332433ff62c7f548a6fdae6c8c6e21e0cfcc69e8533349c1af6e09c1b0449473efe93fe8aa4
  461e0135e8b1e11229931ed80ea0bbaed5f2f37dddf2d249eaec176b3c911453082dd75e36dbe3132fe3108f49564f63d31d389feb2373119194dfdc1ef1116a
  0d7bce8884b61d5ac696de31c7a5d571ef0c2575aba33ece8df8889be45a18f4c3604422f5cbda3547266147b7a0f4d8c41b6b2392e8dfc57e7f4452a077d62d
  3f189de28ff81c5aa35a0e9bc0cf1319eb8c4a313cb75f1af1ddee8df8d80304aa3b23127c63e023275de12f20aa741a11cb16d06bc35f01e586038b24f13ddd
  654e2af7ad5d3768205d36801d78b267f66dbd65361c3d37218ebe04e9bf955bdb859ef178eb384efe335f9e13f4df6cb5328ff29fcadc84fe3b29fa2fbd0284
  e02633cdae5886c9fad3409185a6cf9000613a43428a71d282593e8332b66502f70bd42103620470c701731dfb80e7775c9117727aa6cc5d603b5d2c6b189ee9
  fb001b38b19ee9043e6b031e62abcb8bc08cef5ae61e956b6355c0ba1d305fdf8316f4791a73dbf895c36c11ef5a80462f1a06e47120dd88e518cc72282f1c1a
  6ccd69bbc06ed3678e24a1b28eee21d31df7a0ad3aae800231dc8596b45d37804793052ec1ec7b16d02607340092106674724b687ea2022ac121cbe442263362
  0eaa7c0e561c3f8481e3873bdbb38ca08b8d4b5734e5b30bb3e7d8d21aeb9abac127660f27cf74dcb0d3c596b68188b770fe7c680576d9dd13fd22011eb44cf6
  cbc7ecb253045e64c431dd1542049829d7638bcbf5cb4c872962b7af8740bfb977b46e10f4fddacccc2bf45e70bdce4c0e38895688f3cb3424cbd8959d8d751a
  aeade555e6f2e397de5bee2e34dec60a3c0eb73ebd21251e0a48e8cb81bc7df7b08f620a483eba1bd72dbf153ca4aa0b963b7386c3cc31d6e7928dd1635e9163
  4eb3e7877d3c1aa9a7bc4ea8ee5ec7b602f3e82e0e520b681b580702246b868e61e354f56041ead050eaeccad2ce32805272d2003800bf0dfd03ace318b02a7c
  a871d5da4f2e3dc19af838639c62162bd547462ceeffdd43e240a03575d90a31575dd3eee35a0d8135c05aefa678a0bbd4278410fab8b75ca825a077c3f2a036
  14c4603e4cb95bd8ef0777d5b68726a0b40b7845208ddcc10d387254cb7c54975c6717c58cdb4877250b612dba1a45207fc256806b9ef713e698c8f8e4040700
  e29e37edf64da7d081410e9b38c9942d87db75cd69b91ecc1dce0eb610334efb6ee8b568cd207d940467393e0a8f7cd3e9588e69221996008bb9677abae5e454
  1bb180610ef6a1efb9bbf8d93800b6c86a29c487dbceb6e50c8e1ca2121fa235a0f02cdd66bb5c862e308f8908edae3897efd22410eef1a035ac859235be6709
  b5c8e5fdbacffffacc9b70c6e0213f3f3b3beefcc71f7efe57e62ab3953938ffcbf3b3d5536c7672fe9f34fd579f211948836310bf503f01faaf3457a5f92f56
  cbe552751ee57fb3f3e509fd7732f4df14db34fd80d5dd3db64e82364e28d032100400e4c15fa2da9070635a1730260b01f5a0e8d0b6ee9b466ef0d029b0a5d0
  f3f0c456c790eefb708603b6eaea01410432a441d2bd1223a9941f7f29739a128e02c74fe6a37307e898206c32a2172ca01b099669931053008273348655800c
  98e7f9beeee93d862a27c0b64078f0830d8fbf69e677ddd0462aa46772425487331d907872280a4c428a1967ae90625214c7b85c8c29911ee3523579940b2120
  e3524296907c0dc225869cc50cb99c87e73d138785da5e687b5819d11a5019e3b25286a253d3a0cc5cdec93269692a7b765acd8b86e39163871946c34a693444
  e72e9e63a402937dd3e289c833d733e0f9c0f41ad053733f1767e7231067660b89194ce4e30323f5c231bc121428e6d9d0f7327ecf701526c3e4742bf9006bd3
  c946aae7857835245aa02649a39e2752c4346903bd4c763b3506e5b1fde213ad25265a9bdad5bda95c9ebd87cf71ad164fb256c8b3a929a1accd658e4e1cffc3
  4383ab701f0ff27f08febf345b1ac4ffa5f9d204ff9f10fe5f6cb5800f17e4bd60955b0277c36a906867f3dace4a8dadb5d9811bb29eee8440d61e080a14bf79
  8a4026fc2700250c8af204c6709d29e2aa3ac874b8120030a8c05e2369eb72cc2f1bc2ad09b071847cd92af02e80b27564a2a82201a067e283e5f7f2c8d67006
  8978825a0db91fae0c20bc94bb1b1f520aa78a93a1504078405b230fba4bcc909f677edf6c59ed03644880978bb9246c27b64c03cc8150707343bb938381c20e
  600accb61eda419e39ae63a2ad013fd7b0911e30de096106ef2435c971eb4606b7a37f3080af0b851c61eb03c0f2bd02b500bee5d5042cb06c7a5f6701936432
  08b56eea06094296686007facf251337e95f981b68a76799bbe23c1c391da2a0f87ef9dafaca4663e9dae6eadae5c6e2d2cedacd150eb3800b27746026f2ac9e
  cec0e1c4c9593158d942023e4c29f0aeb424d7dd0eb05d36cc4a4b7704db4309f1bc207f9b6c697a483b6a39883cc9b18561a506d3f123d217d8f6815f8062a6
  b3cbb17a764447b3e2c41acc0bb9eba373b2b8afea54cb515aa2bbc2a483269cb7a75603f01c369faf854493138de60fe2eb19b6e11ab08661c0908a6bf3459a
  1824a4ec7ca07df6681b028960d6a820a52d30b10eb52c8ddcb438210e7a7636276a48b5397ec9d031969928139e10fe0f279aecb2ea8fad8e63ceffea6c65f0
  fcafcecdce4eceff133aff533c07cc3c4355a31239f2bf83bc09a94f196a55335c0e4a6b2685493947a11b7a8fa48e98368879b5ac4acee628b36f33cc48a67e
  4816eb4663bf1f6884c5319ba60ac04181d9513ec96d1ba93094a5bf408b73ce0579b35a2d4d91efd4778aa52dc0526d1dcf0b8dbfe7990d471db0466432b985
  f478d345e3cb77e90ee045db724c387bf6d8b2eb9bf039f5fd0af2c394101b652e5e5eb95c2fc5b5f0f7742dcfcecd620d73b3d3e78bf87011fec410ea8b4b2b
  71797c4b97be75656d070f93eca5f5c5a5abec5a9d2daed6d7961637d9e2c60a3d60a27c666b9bcb6bf007b3ad2f6e5f5d649b8b741a29668366cb7fa409c002
  620a06c79c0b40e598afacaeaeaeb305a04c5ecccafeadedecf06f532f4ec96f5b8bf5c58da565fa0aa7e5b51d95b2b8b95e2ca9fc892607c05c3f429321fb83
  5b9c684276676779452c4dbbf928b5d8cdd6602d403a028183ab6d6b939db39c733087c0e69e0796f8a964bfb397d76f2c65e1db69cb2f0047b878736d7b6d67
  73b8bd625573800b70a8e3a92d5f8985be7021cfe81d0a9f919472801b967429c0be924a0ba955cb43a31dd25fa0ad8deb70161b8e03ec36eeee5a0d11039f50
  929b2cc406bcb55acbb0fc162919e4948f4cc411c82e2e6fafc3d2c49daa16fb83722f6e536e1d48f17be68158fddb3b37965f5c5bc6257e63fbc6a517f8a318
  475af8346ef8747d7b7be57a62633da8ae1dda52b44c1e2afffa25ca6e37c52ee26524f65c904f7250f86b6c0b2f0524d901e56436363ef64d0f055d0b316ab5
  50769517ca3320844d522ee59968969f3b3c8a8b8756aaa891472e872367550362739cde961d1aa6d4b9698ae683071c46c36df9f8576f42cd859e91b0296789
  0aa5e663816dde585f179fd5588e1d8065b3e70ac32cb683c2b6ec401f42ab11348c38d78811f2bddd7179e256f1e5f7d0edbabac1d0c489b609a183e166751a
  f77a64543eba45c3c971635a6a3788b5977be8866d092dedf8c1127adcb10335943ea65db0ff1ebe592b52393dbe5d527f3db661c319c6b40c769f6a99f89bdc
  8642218e834574ae503f2ec6aa3bd13e547f53462469cef6b596adfbfe4216ad43a701cd9a0656b74d3ac4f43518aa5e8823395baf91f1e9d1934affc3d00b43
  de1392ff95caa55285ebffaab3f3d539d4ffcd968b93fb5f2726ffdb5cba767311e503b081e960ef7b2e8a0451dee598f8a40ba10a6d6956aa4e570ac5925085
  905a48e978d04edc36b9682b2e3b0835704546cab7b4bcb6bdc4d5e208505a9f988ed1772d14423aba7de0033144b234d7b33a167c6142a58f52a0a609cd0b1d
  d278dc460146acde17aa7ca06b667420a3437fda337d53f75add19aab741f53650022f50c24cd3769b3395d679f3825999bf70be552c37cdf3c6854ad3386f9e
  bf50ad1a25b36854da73b3a50b667906ba05874dcf9fc131804d7366bd5a2ce546e889b83e27697f399803ad99e99fb4be8a468f231f79c4338d23446eb5dfb6
  c9bc3529c7f3d84d20e368ba6056f6e028ec32dad652cf0543e6854ea2ccde3d76d3f22d12ca422265163a249e010aee91853e3472cd3170b45c321f91b62bca
  580c65b74273985458ad1271834a3aec0569ae94646e489f268ccc84f24c19c133615d2ed569b19a4d686c863855b4b66564b3cb844d6f422f862d1cb8bf9062
  62f9e53418ce05a465f23048e2213918e23616915467185ea99246355061e0e97e40161a7bae778fefa2833e8ce0da1adbde2eb06dd3540b1c4e103fb42177cf
  0c746e73e37a0434486ebc02ab9b6d987ba76512bc3a89ce6b4c2ef9bdbdbd82370dabb8d3411d3e2d7dc7ddd5a7cfad94cf9d2f9ebb50990ea009d316fd4cfb
  fe340c868d37a68c19a8cd258a5fd8cd6b7117f855427c2df870f0e5c573dfb50f3825482ddd262e87ac7ab057f7cd8ce0160026fd954c8ce0b60477830ccbde
  3d016564fe211e7e0bd9a57865c4a448cc01b1f7b0a9ada63b951f4e9bad6222f0f08df591e9e74b32fd8a35952231545797b80518e01f62a460da39ab8eeb85
  6f3d6968c55796e8d9ed29def8c6ead41d5a6c9cbfc7a4b33c45b2f90b2d4db6201fb7957789469c835bbcb5b2727509802da460f1918d27066625eca79b63b5
  9986b802b9cea52b97b3922da00c256c9cddd3200186820fccd30c40925ce3697669717b85f31c0bf84f2e2e591e2a89bd3daef011499d47b560f1e6e2fa7013
  1e5c77a24cbaf2c15ac5f89c21f90dec2cbf0fcbde64d3d3d342e5851a27c422a8046ff90cd106ee8c3c5bc33b9e7d28d50e51156658065e9942601cffd058db
  56d383e5c08db47afa3d5275e17eb35a56800a341b0e2381a085fec6677b28836f9a705422b4d0e71805902764da5296a9c09d3b2dd8d7b45510c1697cd480c3
  7b4f815f335dc8ae66d50ad8826662edc0bd493b0a8ea691fe6e0534dafca66badc6ffc63a7c5c8a02bf6ba981cab1dba53bb7cb77a612b791e39fbbe74b7763
  d1440269e60199889b5c1aefc5ed32ae6c4fbbb89a9bba93c706366cd359a8c27cc1811ff80b15c0bad67d73a154064e9e6537812713843cf21944872b64212e
  85693935bb5b52c2b1a4241c3e4ef2340dcd1518f029346df15298152750dc1056ca3554fa413f704250d168053582c014fa6dc13904f817e882976154c90876
  cf6ccec8c99d1100679435ed0c9d4b06d63a0ddd06564807ea1b2f1913e445e3652052b985744f47cb438fd4ab247924cb0fd21d8e3d4384265565304c38044d
  024d66b8f56b4becf2fa8632b115c6d462d1ac435e58a09c76688601d7ae2a111299db706b5d81fc1c778f17dc661b347058c99e491774614cc4f601c4098b5f
  2dea6b1be2c0416a45b5085abebdb80dd06cbf878b538c5cad06eff8c0d73bac9bf7c86d9e1735f90b5389baec29b50770a2b10edc03d3307938e9b02b70807c
  d426d388f574c7ea87fc463495ba0cb8332122e3272275cc337beeaea93625d3d564d102ea8568ca0b2701374b421d1e14f681f54ef54782d46cd45fc3cc755d
  63212b6b2401138225da23472de216df31bc9685000581a3c94a54b77ba627966e4b18e2120288e930d8327b0d79ee4a24a0fb0d8107f815bc831870bcd508b4
  365c44352c9157106f5afc459da2dcfe981392fc32943fe2d8ef8f41261295f40be2c303d1c708ec2191976101ffeb93c6132827690a10d316489dd76af8af36
  75286b05440b2c4b90a8b6acaa2d896aabb923a6a91278f8c9bc2595b71ce7cd4d0d495c5ad643b52aaec476e11c292cad1fd3ac675481108500a902a5a10295
  54db3841949c4d38cef8ee220e10100adec09704919f34d4928b3ecffa7939ee702c5849703b682f8f476c86bb61206ba9240ba5e1b984349100808f2d0b8dab
  d0d60316233a459852c7d8d4209dca892a4005405309a376a2dc922dde873cb68b1b43ee91011a566104d44d24214e25fb52e78681c2563b75474455971c9fbb
  b3d5bb0bb49cc79f6b68ed6f39b1999b6aeded449f89ca4c9cdfd0426c1ed770f1f3bb7207078eb1651845b44651c81b566a8e27718c3345e6692306b16b1d3f
  885deb5106f18af53806110890070de219366608bbd69b3e84b21ae01e6405a57c395fc957515b734d296748d448a4e0e0a0d31089053762dc451df0fbc8e32e
  988dc734f40f1a68f83d6ea449bd4a6d420deca30e772e595162ac67f373f9f9078e343a424182992804b763e20d307e52b649020560f8e9c7f75c5ecc689e35
  0f169238470d626c6f2a1a1427250c4ed5f6ba04d9f9a14d5835ec675226ab48b3e7556b724396b0aa05cade88d3e43059a5c608ad3652ea8874f20fccad74dd
  941de6f8a44c55273f2721ff073ae0319afe3c8cfd4fa55c2d9f2a55cb7355cc86df4b9589fdcfc9c9ffb9583641ab2504d0960328cf0ab65000ecb3a6ee0399
  c975d44b328bb9aff7fa78c6c38bf0e9a2950ae5594939029628e592225791292567dd97b9f3e296eb822cfd34ab72a994a816b28a3b0902b82827d478d49505
  966d0bc59e84467fa52d62dc69ae6010f4bbeb0ddc1341ee8cd13f70c0c0bf2a5fd234b5e01b0cfe7f400ed154e87313ce19c8283ee08973972ab94b58fe2e80
  ba5b1837ae005a8c6bb1303b34a078872765238c6047496418367874821a52a4435839c7c79d8f02c21693cb418bdc70140f4e197ca259cb5055a99250b3cc54
  1e2e57c672152cd7077ac42cca9ab24c0316980a6773d981198c65274cca4e0666d124567dcce4118fc4f8bf2340b126aa951e38fdc43431feefeb82f0e0e501
  45eee6e12f35f16e5e2c14aaee6e120a1f4ba2ccdc00aa6d5ba66df0af639754cbc2899e2ed2aa2a152ae5a165c5c50af1aa82d68c5c3bbc79a393a8ad2393d4
  822b8f4c1ec20415b122e56297cb0a5b95c61fb4f8f8ac2633f2568ec8caa72f9995b77a38ab5c9a54a75899026c368f2fa2e0f04aed4fdfd487747b853ede7e
  e6b4eee35b1423671b65251accf5d02463427a9afb09e42d06dd6fe936d9d9958a7f469b2eb1778a1c34260d952a8627fb6c369fc8204436d0d96739a0bc2c93
  8f473c59a9288a2338a1d14e94feebd86e537f8cc61f0f71ffb75c9c1fb4ff9e2d1527f4df89741f3d9aa2e810675d9a0c90b5a270d89be5d6d1646e4516ccf8
  84b6c8f897ac7af1814c7907ed2fb9c12e3e92e64e5e7b118699649c2ce4b5e4ce57c821e833991b72899e20e4b22d729eabb2039f8c7f148f8b2fb355fcf77c
  29955012b993d7385319cae90c25d5cec4ed4ed98994b529cfe5533bb89f2f6e76ba487d467d2afc29248ba2d65396dba61134dae4019983d09d46d38ee1d24b
  5c01a4b6ba1dfe453cf19c5c8d800952e28bcf52984bf57b8104bbb4861fa4c45a15522552b32246deedd1846c2f8ad91e6d7a4b0b65511652c3b0b95d570b63
  6085e88e9d259a3c3741c46f17fcff583d3f3c14fe9f9d2fcf4bfb3f38054a84ffab9509fe3f29fb3ff299d5d70d7251855e040029c2bf282c1e769ca0b365fc
  073ddee849eb30876d2a5a95ecb1e21cc32659e4eb90095f87035662cb5227c975dbe63e9c0aac69ebce3d829b245e85207fc899819e67ce4249300b6423a339
  28f0a7e7dcd3a55c2df5eee4f28c64c2d9ac2c202877d1a5b6305c93f2815862d2449b64ba4081568542779ee72d47053414f690ffc39145229e0f291b67aa87
  aeba08f63027b06cfa169a18253802b30538dc66e43ac04f1aea59f74db64d834ccf8924a1d763db7d2883726d97ecf1b007c8b076d033157a31121792451563
  edf8f84ca6fd4c705d220ee74dba8e0b0dd0d4ec406f9546b12815b2c558df58915674bc0e9f09c53319e048bd301997d956c751ea8796ebe1dd5ffb804bced1
  ac89df9d81fa723969989d545c99307d7e8f0bf699c57d8150b32059242cc45fa8cc9ad3f2cc9ed9e3778d15378677d8e180341d1fd5d8f845b44a344464bdc8
  8ad2ba6a80cb01c6b6943044a2ae7383043ebacab05cec172d21ea922ae033ac4ef6affc8d961c1f6bde17a543e63d578ee484bc4c55a4b8ee054dccc8d38213
  8b012cf335e1272c3f451aaf6b81ff499ae19f61d776d1518c2d6a16b886eb2a60b92d4c91fff629be20902200c62f473bd00f0e605fe8d2291a6e2a236c71b3
  571276a00b34e5fe2cbdb5d07a5fee039a297c476b180e2b91b30db46783b6cd2a3cf10d0423c0fad63eb99e4eaf7ff260475bbcad720bdf8649ec9474319d42
  51f8219fa8738195e6f8da48e8f1b3cffa7ddde1fd5f98c2ccd398b976a8ca1df5f79f99ba7888d08e28f345257108fb062e46e5b64d5cf40e3deeaecc378340
  ecdbc420d02d4de9f82dbe4c8f74b96e39e41f51b981c36274e5db904e0f7032869cbb2547ed862f100d2118b3dd06f8296c9e7252971a30f2dc2d1083ee63b8
  0a34c043331e4c21a10c2fe1e07a467f445b78238f5fc6ebc1097f0b4d6f17d8eae2faf64a2ec611a7a1970573dff2039fd79183f176fb1a0931b4ec0ef91608
  bad93c13f7fa0cd7f4b95b742c54605bb6a9fbe4470f9628d0cc9631e0430f6fc7b760e117066ac7cb78262a17db49df7a68d8250e1261dcd9e009a4af8cefbb
  a6af5ea66e35e2c5d4c4ed430986d7f6ecb48f9373a0c5a0f309197c8e7b4b100312df6ce49ddfcfe59243079dd262d03989dbcec0990107658f6cd3c8a831ee
  9af035c9cd7af873dcbfb849b74fc770ef701c3130296d170eaebdf48a4cd6204ddeb8df0ed89603d358a34704976a060607b16dbd4fe63f38acb951b3a7f034
  2ae1796413e146815bb0e136e67e478086718cb1179e656b02ddbea7a38fec642596b36bf9169a51f1401f7c5bab3593f2c14a0eb6b9d72eba841ddfd81eb843
  805703d17b61a0a3801a8f789304c5e22281ca42979f06bd4d35019b91341e1b34d406e907963ac0c8552a1a7a6578968668e3a0653ddd55a485c38d16310341
  108b0cce9f0eac3fb2e45105cee22d7201d727db30587c78baca2528d27053a24012c3b0d46a3dbddfb03bf643c0cab3f71caac3aee3e94d5a02745af2feb65c
  c31419da0d4a13cb5741c48f5a613f77969748673ebd9042f38785fda3c6eadaface4a7d651921e10771a9ed2827fc69c9c1d19d032dee5e62350a0a81e77c14
  5dfc10ff27fdd69c1cff57ac9406f5bfd5ea44ff7b72fe1fee99077bae67f85c67e500bd9f6d6c2d2e5d5dbcbc924587a56994dbb45d44423e3ffdc923ad494e
  65902a0f0317ef2fb7c837544f778828935145b8491e711e78cdb2205dd21029d502fc7d3a73e68c02a732d7b893bc316980623374cf7822cb792cf21f113ee5
  64e5ff7343f2ffca44fe7f52fbbf1e26a9f7c514f53ee01b4df73a21bf8840d21d9ffeaa382b3e77e58537daee3e2768a0d8e58bb850c6bd4ff75c0fa50bc058
  d87e6184a589f04820637dc42a4d71696f84339a44def4a54a22d18623c2b08c58ea83febf5c671bf18df05f90a71b71bcc4020fc3c63d5e99e427fc92ebdec3
  206c8819e302a1b545f2228cd4969d2191380c5f46b8c4e15526fce69025ea700b39738fd91754ef24c34f97e921e96c6849d65cdda1c7cffc4526c55d124f2a
  41f54c3c2953c151dd1bfaa672273bac9e850880e78957891c467443212c722678f86d83ff839ef257f1b8ce80e3e4ff734afe5f862380fc7f564bd509fe3f21
  fc9f7060c26eacb155810a25ce4d06d25814b8768358cc01b7ca9691e78e69845f1ae19686ad09aa925136339022f3438275a4a0a073c651fe9579959bdb4c84
  776271c4a94cb2ed49348e6e6ed21ca6435286cd6d48229315054303449bc55794d574f93d35c0dae78bc5febe12a825ddb8c0014788560e949fecc0e8c6c7b1
  ae12e932266926053cd58be3fcfc50cf78f259593aae4be37cac748c966251c9519374a4a2440032ae282f261c6b8d2cc7dd248d2ee8407509476cf28c18e917
  8c31d22a0f780683af5cc5cc6f26a39f86adb5f56b3bc592f2dba30ce7156061f52e4ae699504de7b9bfb7c511252cc7014efa65d74a5c1e1f6c9e1888fcb12d
  126d62639b811af13c437d789ebbfbca4baf5f89abb3c04f8df36e951bdff5f42539e1e16e71c0c3dde2e3f670c7a84b000dffcc548a856a696e3e75332c137b
  e401ee6dfaadff11324a69fec0fcd0dbb5d064943b68838dd873c96415a303d76a325fe3ea86265c9ec1eaa640c3fc4d1a3de4923d15376cb9db2812e07367ad
  96ef3580d0ee9971053c27ff2aa70f05fc28df57845256dfb7fc2caa09cec36401777d4fbc497f04a2da33ccd77779b59ce4e2f8a55623f00d7458c69f9a7b5a
  4e94baba1137061ba8c941186d22cc0e944bf7ecb6183bb6e5b94dbd69d95670c0b473b9ec98a2fb71d11d0b0641db808e76fd5c367d3d25fe013c48ae8c5bc1
  3890b6d941116bdff52d3a9f2077d30d02b7974ded12de3ddd301ab8fbb431496b90901c14f8f769914b8d64c7747b8d2eee08ed80a4252db31f2c140bb379ba
  8e8d6e35b01186ee774d239b1b0037aa5acff2efd15d2a8d5fa586d22889c489cf2636d11914eb72ffbd26d73e90b21e0a8b9b58bc89cc6de2a5735184549bc8
  67f8664255e5b695e65aab168a3cf85200e791080da0958a39016065796da7c6f0ae2c3a2fc11a018120b74881a5ac807b2fc0705f902c8284adc50bf00cbf78
  1e4c27dae99b4806e0ed6f313667517bea3ac8559ebdbb18509fee9e25bb2bfff6edd29d3b6775d36f10ede09fa50ec0609e2f141f589cd6f959dc3705d48f15
  0ec8fda89c45c0d0c8c592664e932ab82289ffd12b32ae22408ef7f080436115ae41748f22e733b0026eec2a6289c3b2e8189e0e9b4a2d189582dff9ba8fb173
  daa59cc5efd4ad5a1e9036cb262a64a1191dabc55660ac831adbd6dbb0b058df9557d25f4a7a07c4796deb3dcb3ea0a5a33bfe5022ef42d3b58da457417e175a
  a16bee3b5ae774deebef1b57ab24762b296cfc2e058dd2712992a246042c136606120ba3765761121c1c536f75f9d5f91406c8a64640d964a3e76dc0d728c48f
  cfe4871ca991c3c137aeea2ffedbe87896a13c5ce242c843b6bc1c3909d081a5848b4abe7ba6dde0b4253f7d8b8552be58380fbfa5d8a90c569821a9ffd15bca
  ffa53c283e0626f0b8fb5f95f9d901f9df5cb53889ff7382fc5f6ac69f0c265086ee1dedef8b9be332dfc80c77efc17ce220a3a82a223e31e0de2220e1280307
  b3e00cd3f087d843c846593983c81ec021de584b263311713c33a292476713259fc88f61c528de58136c22436630a5897c4486114dd9a4a902aa8e465a8c5f59
  59bb7c65e7129906df4a3c5fda58830701288e51946a02c0e729aa1d58e350995d6ee3806969eb06710b855b86f1fcb76fefdfb9931b47808effd9cfb33480d8
  294729976ad16d3908dcc270b1237cc1648732257268074056e506b2d010f23c7538d365ea0171fd4dddb75a0d4e4872fa843cc4ba810b27518da518d6fcd8de
  fa61930a939bdc2d4570d468fb3ac174e04eefa0d8fa012030566243b9531d7732274970e6f7e1c06f403bfd46f34093170e52599052860c2d37043a4f4b2771
  377343f33dece7589a05f28baeb022d25e908156e617ebd37dcba25b01a66d2fe7b27474a3ad3d94857d662088fc506eba08809e9fe909b30e66b1d079c486be
  8fb9f8adffa14c85b63080245e7d7fbfb0cf34fc17b9257add570f008b7fc82541245e846335d17d211280fdf0eaabcc4aba93193b2005e4460437da405aa1b1
  aff1e8f45866a8a2140cb2ddc912638486531856155625314771b9cc90176998cd86d8d20b620788024193a459189bcd100b1ef6403e8dbe445edd6fa01b2d0d
  ca2438746e5601287c22fe1f43ff4997982711ffb1549e2fcfcaf8df9559cc579a9d9fd07f274bffa990d24f04f1d7b643cbc09095dd2aebcec9f8d8f4754b1f
  f6012b88269f7cb8f96c34c968f7905c4c505f645a9c498fcec3eb1810d3a806f123857c8b373d4de0fa8157d9a798b984ead11123fc898fa46e55538edf57a4
  83e445e1daafc62edb610bbd336abd9e6bcface7e06cd81616f47ac06e99e63d562eb2f56b4babd9c489238dab1758d266194e6222152deef8c1e0f6b65e60b5
  acbe8e36007b5d97e26130b789ea66ee1008e5a250d52528418263142e897ae1c42acd25aa3d13d73bcedab9749e8c9c1f734384b574dc12bc08b14766dd22dc
  d680f0209eaa81496362edc513c4cde74bc51838104c2d3aa7286c087f4cb2144d5badaf46298ea9904b79b27f880544afddd7b39e865d633eccea5873a4ab4c
  32b7450bb0a169d2d5da4459cf924b7ea2b088c6bd8ee7846349eec6527995c4b96aca89e34e96751f03c463f1c0f40b834be9e12770dc87c73b8fe5c43c26a7
  f10dcd60774ea31c16f03fcda667ee5a449dc3b65f5a5b588a5d4fac09d713cfb0f5ed8575137d7b6dbf12ea9ee93fc3b69717b645e879b62c2124743ab20ea0
  d9b6a5cf5b6e530cb3c4fd47ca3512fbfbe64e300d2eff25ee2b699b8de85eb8ac66c341e361f1a8a0277428e0dd10eeb55319082543142535b209c4fc7a74b2
  c22a7930594d6eea0979e5ba7a87d57299c4f5f0b06cb61fe8c29cd83de06cc45d26dc68e990c04e66a0338fcedcab8527bdbf127fcf3ba8d4c03c82d148ae9e
  a2d88ce4ea3b70a234ec5edbe206c8082466be867d78978b49e64cf980c68bcfec69eec1392fa3071592fa8d33acaeefa5ae7b717fcb7c63944aafa37639f09a
  a816ff24d3d57cc4bb1ee328395a02b1884bd9c4ce013387fd48a4d21d6db4ce320653e4756d591086215d8ea741c1740a39db116550ad9a2ac40bd0e761352b
  8ce0926eb7906537d11b1e821083574e399b150f5a3cb3ea867e1adc86721a2bee894997f418945a79ca430b35afc87d3897629778306579ac3a39e0424dcd1b
  d0a0fec0b27827f35ff102cd68e746e48d55da64be869af120340ed8b217d25578a9c54e8cd326065ddb8cdf917fa7386cc2899298d23c9fbd64c1f270c1f240
  412c952c52192e5219ac0ba63a2fa63c5174694de46b596244f22cf6d82a6fef8f52fa0b0b031891dad25a62cade6e7af6a02cf10d0f53ae11f9ade1a2482fb4
  1d75f02f25c38f255716810280e31708f7f6b310ebf6a759a970610e96d7f64a22081139fa49e47a3ace3562a8072bc1d38f74df6a11b25dbfc0942dc5e03e96
  f3ab1c040b5741d48cc46248f8354e5d9989afc90cfb2ccec75e7d84c386dc03560bb6bcd6cfbd2d17ca9914eea288c8347e3e512d8481c8b241ba33e78721de
  4930c4ed9a78a15406d69cd7a3eb5c4210a922f2621d24d8e39491c1563ccfa56bd54b3c4a1ede00530619dcf31ce0de18679e8593d63242ddc6a94938b24afb
  a0a3d02cf85c14b8554c11d975c800f109f4b9907ccb0f6528a7329487335452192a8a6a2291975400a4180e452948ca3645e808da61147931f84dcb8d3a0c06
  739d4da48b70c5366c14c0eb0a090c0897d1394a4206fb0612b3c2472cd3b8fa3927e6049ad0f116b8f35d74bf5bc957f13f9548ac80d06cc0c9a7958ac53c9b
  87692fcd1613101cec05d422394e78548c6f56ac2a0aa4ad32a8c242be1adf552b6ba51aea90b5c470e5f271631297d438054a17db28e8b3eddc2eecdfc9b39e
  e5dc120ed40a07a9fb64fc0e9ca83687140f7d48569549313c23566a9a6df279cd082f9d4044b232644aa0514e3e275a0de3473e016380c3adbacd676aa17c27
  813ac7c0aa3c24acca43c0aa3e24acea9ddc50a498b13baffce6edbcf2313baf3c0a673e207f25bd5307b719ba608e2501439b6c20b7708337b4f86daeb61b5a
  f7e55c3e56eaece7e4b2b7daf076b1943b4cacff055afdfbfb6a1a8ef0441d9923cf55540b894e9ec5a32277f4483ba59c38501fb05dcac76e1711087e899aca
  93b1cdbc95dbe404416c22148ec90f592bd0811c48f2c78f683d325afe2f42b03da60b00c7d87fcc95e64bb1fcbf5246f9ff5c717e22ff3f49f9bf0cbaf764d9
  7ea49afe48f6ff0214dfaa234d3cf8ce7c9bc9c154a3d0c9ee2529654dca585b8f2263f5adc08c43f870cdb03f46faaac7f2d75443ca77d80e3a64a53633c775
  a6ef9b1efac4a103c5929170e28a35c3c5b05102a413584ee886be0a2190025eb913076e4a8cf86057081434ace37a344d12562d9e1b2c826149c605e889a1e3
  380f091ae5227bbd773f6eac25554b3b281fcca421bfee8b1fe30c7adea83d0fc6fd3dbe3cc5e61e738144a73d97829379db092948b080f3218c09789cf12159
  2174b9eff679b7d3a6062372d1d2447b257ef36224a43d0cdaa891074d71fb853dc5c88fa6781d2c6490d1772b4089a6b81332940550b5705929ec47629a7bca
  99428144c30f3c6d6a7f7f2acf9c04e53ba5f8a4542e6976b28f213546c8bfa6b8b90bd3362ce719346919557cff19591ef3126702ff40de11d20a34f4a10e24
  821b911817bba6f12b34347278eb44c97d31d63ddd9cc90ef0568f0378b92a817376aefa3a602f5db99c670f84fd000651d923fb612f8ed195a89b6c61525651
  0e6064b4dd11f672e36f4b4d936f05bf81e851a3e828b9c15e719ab5c16369fb03a6de452dfbaa907e3d3bd3f42e6a9b0bef7ca7f8f0ce77e65e6523ee16c519
  47244221366c5e964d01529791464252a9002a2917e61d68385a9018d6b71b3aa2a3ba2102d7a5d8321eb453a0a7295850b0a370f99c1e23307c1b764e45cd11
  6b3011cb46acec7c7a00c4baef1292ee86fb825546b3ae705f237079b9468935533e94126b382e872812af41a0d77bc167f2d0397911c1775c21f23638a2d454
  cb44da766a7cc9ddb145f945a5a907b51433c01f0c4f340242697c511212690fc8003849ef9be8950aed3a7ded9841836a05cc9686779d4a3373f13f82f94443
  3b3410f06b3554c46b3184c0e55678dd202738d4c995ffb7adfd1f39049fee5bfdc7e702ea38ff4fc0f60fdcff982dcd4dfcff9e14ffbf0573cdd0556d22020e
  fa7079091d9d1df6f48e67050160eb97e074bd775bbde312b973f8d2b98b2f9d3b3ae27e4f637f2e9c2742212aa214722367d02b96ca8c763a35dec18bac5301
  0b7d8cc46b777d46f533af9bf47f8bdf1705e32a03704b08e42cb74b8aa364b80d8f8a48fe8b7b7c0bc99560aab46ff67407ad120a49d77878c34df86843061c
  ca62c1bb005383a6e4ee16dec60eaa06f63f7a079c79dc75e01e9f9f9d1dbbffe187cbff2a7395d9ca1cc6ff22ff4fb393fdff96cc3f3ccfbc05f39ff4ff559e
  9f9bccff5b39ff86dbf267deb2f99f2d9727f3ffd6cfbfde74c3a0d033dee4fbbf7389fb1f30f778ff776e7e42ff9d0cfd87da19f2a94e2a9fcc4e57baf3956a
  094ea13986f0dead335a327855909c27bb8e5466ac2e2f9214ddf545b4037dd821781e65f568bb2faffedfae633c6301c967b7849b09d2c2df018e31e8fbb599
  190f18558acd1bf60a1d2be886cd82e5cec44df0a7f73a3339a064b165e50251642428237fc6a8cf90ea73e1b1de34a48fe8645f5dcfea00731d08311cb58fc3
  2ca16b02f4acf1886da2b19a76b9f7fb0272c167f8a7d2f4f4340c56cf75a6e902a36ffab902bb448137700658d3b34c8cf110ebdec48879a86c11cf89c6d732
  e82075d385c643dee503a0b6ad165be56aa711f3ca7df9c180889c5c8a24660e618ba008d22974d2d73bb96510d9b8b7695fb4b4892e61b11305760b9560ae43
  2438b97b142a30f2ffa01c46f33807b1824d5aca8d9829aee70068bb961fa29777de913d0b6875d10b723bcb9ddf17d81577cf441f880cd623ba9c1da889cbd3
  0675793d33e8bac095ec991ebfb0d847833db1f6e558c12477b861cb4038025ff5329fd43c41039ba6d20eaab5b56b997b2c047ec2a608d3c9f1117981cd3883
  1117e27bdf741326935913372e8879420f1ff911a6d3e82bdf6da1c28ecf5cacd46bc1bf3408eaf2a72c81a12ad17b374b5e36978a410b1d73ba7b4e2143edba
  ba31bda5dc98ec2caf64328becaa0e93e64c6f9816c0d0ae6ee4b8a713b1588e7376c2348493e3ad154e96b88b243ec24ae3c77596567295e8b60b8b974aea09
  6deaaec9bde4a0b776be82f496e7a2e752688be888bc50250677518da55872bcf15251a7ccf475a97695e312fb2c1145b00e1e639674b318bbc0f7b912b499bc
  97b4c7150b39b912d1d10e8219e830476c43ed90da4ea6b5124a0455016c1f54c1b125b7c3b4522907c38b0a537e6dda106caeeebc393775f2892e09b5002e80
  51e27a31192bb25be367031a9bd08e1f331f2306bac80772c4008afb73f110dd27153e1f233e1027300e6f03fa6f6f6fefb1f180af83fe2f95cb13faffad9eff
  b6be6b019153807fde4cfa7f1e99fdf4fccf976727f65f27f4f307e0bfaf64f8979dfafe2f3b75ea2be09b06bf5f09bfcf9fe2df5fefcfb54be7d5f3f5e50b7f
  f0dae2ecd98de7cfffd0faf3e77f607371f6741dbe8dcafb7aea4996bfb97a3ebbf1dccc7b2e3df3dce7676a5634fbdccbd1eac5e77fffeac2ccab372f9f3f3d
  aedca3f6e9d69585afb8b15c7c65717ee6df5616bad13b967e343afbaedf8b2eda9f8baee81f88965fe8460b95e94fdc5c29f76f42de47ed6bba4ff38db5dad4
  2f5466af464fadfe60f4d5d77e33cadefa5c74fac6ef444fbdeb77a3f9ceff8de69bff297a41ffc1a85c5e8a5e7866ea9fdc583dff671ea6ce645a7db9f6f4d6
  a5cacf5fa8cc7deef4f37f33d2367e363a73e37f46d91bbf0bbfbf93fa3d7313ea35fe57a4ad7f24ca5efcf6e8d96ae573d72f557ffefad285fc71f55ebb34ff
  4721edaf5c7eb61a9d2dbf1c7dd5c66f44d99bbf17e5ebff14eafb1f4375a93a77fe47f474fde3d4f7afbcfa89e8a9f29de8858b7311c0facead4bf35f3658cf
  c6a5f93f71f562e9cee58b0bffb958bd1ebd63f107698ecedcf874746ee73f45c5ad9f88a6b67f3d3abbf35f01fe6712757d06eafaede899dbff2c6ae87f21ca
  dffcf7f4fdecbbfe6ff48e85bf169567af456bcf3dfbdb00fbeefae2fc978bbe6ed42fcd7f78e9e256f48e8bdf1db19dff1d3d75e353d13bebff1a7e7f29d2b6
  3f09f3f5d928b7fd2bf0fe8b51aefeabd4d7333bff1d9e7f257aeafa2f473ff48ddde8d7bff7dd91d3fbabd1b9ad5f867cff2a3a77f3bf45efd8fe74c4a0de2b
  cf6f463796cf7f14eabab6bd5cfbec37dfd9895ed8fc2bd157dffabc98a3dfa5f97a1ae09fbef17fa8cda7b15f377f279ad9fa08b4e113f43bb3f593d1e99ddf
  89daee07a2f77dfdb7464bc6bf8b725b1f1763cfe17cd58ddf8f76aeffc5e8db1a3b11d4f5bb37569e897ed8ed443bf56f8fbefac6e712ebe0d391b603e373f3
  b3f1f8c133b61ddb72e6c6ff8a9ebefe718279169ea7dff55bd1694cdffe5578ff9faacc9fdafaef51e3c6b7463ff68a15edac3cf379f88d3ebce746fe8bf7a3
  3ffdc22f03cccfd0bc7cd5ca47a2e273df147dd5d6a7e81bf60feb7a6afb37281ddfb5fa27609c7f59f41dca6cfe87a8b8f0b5117be19ff37986fa4fbff0f1e8
  bdb75f897e62d7c5fafe1fd6f7a1bd57a20ffa56e45eef44f9cb3f1c5d5ed98ffe5ef776f4a1c08a5eba6a4753eb3f1f4d5fff059ab3e49ec07aceed7c2aca5f
  ffa7b0673e163537ace8b5f0e5e8af376f45cf2dfdd9a8b0fafdd1fd1bcde8b5dd5ef48fc2beeadf0777a1fe3d2ffae9fb5ef423cedde863f7fbd0672ffaa903
  3ffa961777a2fcd2fb699e785d9fa1bfd427f1cc20adbcf237a2efd26f46afedfbf4fb33074ef40fdd66f4d1fb3ef4cd1bae0f7e3f24eafd90787e6ddf8bfe5a
  f34e94ab7a11abff57ea13dbfcb7d0a7ff08e3fa4978fef754df3baeffe7a85c6d473fd6efa4cacb6784fde3bcbe2f507d615cdfe0ef4fed3bd17ce5c5e81d5b
  bf1565afff66f4eee64174f9ce7747b77a3f1c5d79f75f8ed8b55f8fb2f5df8ab69fbb19fdcc7d6f248c81fabef0e30fa8ef63af86d172e999e8f4f54f455fbd
  f62fa2af7ce6bba277acfe4cc4aefc4cf4a79ef95bd1e9addf8cce6e7f2a322e3d0ff3113c647dfdb1f57df47e18dd5b5a88ce3dff7ebe37e8f733e2f7b31cc7
  9cffa6e8eb6f5ea7f91e5fdf2b0f551fceedcf1eed465f7bf366c4d6ff0decb1df53f531783e7be563d1fbf417a39f3e0c479697f57d90d7171d575fdccf57a2
  ee562f7aeaca4f455fbef24bd19fbcfc2fa399b51f8d8e6e99b4061f5476a0becffff8eef1f5d16fe8447fd9e8455fd77a6ff48dc651f4be76377a6deff8723f
  21c649d6f78f1e349ebe43bff11a7f05f6669f7e1faa8d89bd26eafb7fe3eafba9f7de8f7ef17bbe3bfaa5bffb7dd18761ddfc24bc7f08f614eeab0fc39efec9
  a37d0e0f9ee5f7e4fe1b53dfe7693f0ce68336fcec377f7df42b3ff20fa24f7ee803d1273ff881e85ffcadbf1efdbbd73e14fdabbff3fee897beffef44bff2a3
  3f18fdf4d77e4df46ffefef747ffec7ddf11fde2f7bd3ffab96ffd462a9bae8fb703eb03dae133df6136607cfb30175ebabe6ffabae8e37fe37dd1bffe7bdf17
  fdea8ffe70f43178ffb57ff823d0dfef05d87f3bfac48f7f20fad8377c6df46b1ff831aa0bdb807992f5214c5c8fdfd96ee079f4593803b76ead3efbd1e0c67a
  f4bd763bfac97d5ff5ffb5c35de8e3d7018c3f1f7df4cfbd87dafe73dff20dd13fffaebf1a7de46b5e8d7efedbbe99dafd8fffe2b7463ff76ddf44ed7bedd53d
  358608eb7beeb5a360673dbab9faec6b50d7269ef1972f56bf7cf3d2f9bbef5a5df8ed575fbc0e6bb74f3897d60bb655fce233c247981f14ef324ff21dcb629f
  0edf753d7ad7eab3ff056003ad52f9138374cce6e2fc97218d036d89fe52eb2555e7a3fc62192c8b3000d6b703cc3f721c3db8b1389f5f7f7eee67adcdd5cfbd
  df36a3e3f081c48fdf0379b10c9605184f3f2a1dba7ab1d2003af29fbce7c5fa17be07e6f6c303eb9df605fc621ae681bcbf8065de088d0d73fb15979e2dbb8d
  17167fedbdefae473fe0be1c7de420a0dfbfdf7f39fab3b7b7a3bb2f2c7e12f2bc0273f415af977719e43b56172aa761de0ff5ab977effebeedc8cbea1712b6a
  5ebdf405f8f65e48cb8e6bef1be1c78066fd8330ffacbe54fb01d8b73fb479693ebbbe38f748fc58f41beffd74f4d3cf7d3a3af5c73efd85537fe8d39f3bf507
  3efd1ba74ef5bfe6d4a93ffeb8f8538485301136d68175519d50f7c47eefcd90ff50a8a6691eb1b470d0b3df6cfbbff26c69c0fe676eae3491ff9cc88fb8775a
  93516b1b68a55763e965a11277e185fcc1160b55f2c00fe90dd481d598e366e8ca0f8f6e5bc318085c7338831fb399be5232d752e50e4c3f6398bb7103f6e0e3
  6973bfef31bc2d51abd13599dcc45ef8e4f67fff5ec770f79c1396ff27e3bfce96e627f67f6ff9fca3ba32780c56608f3eff73d5f989fee7ed32ff9ea91b3db3
  10ec076fd2f95faccea6e7bf5cacce4dceff9339ff5db272314cdb449b992d651d4fba73b11226c7e497e4f91f98bd3e7ae47aa347c0a3e3ff79e00026f8ffed
  33ff6fec087874fc5f9adcff9ae0ffc9cf5bb4ffc92540d83fa9fb9fb0f1cbc2fe1f4e89ca3cf27f9509fd77323f68fc4a86ed6c1d63c3b26d13663e5397921e
  8a36542d940bc5ec1f1ef8190efd73868c6cc3beb495677526c0647c47effb5d403404b05c2c97a78b17a68ba52c7b00bc21b80a0a1a78670253b71bea530c77
  0e406733e8a258f86cccc4be2aa4f17e5f6fddd33b789b13fef50a9e1f8486e5165a6e6fa6e5e9ce4c36af2ae3d1a10601c046a1687ea6d3b11c930ce713b700
  0c934292bade01424a353497e88fa7b2c51ef365be4c2e93e9ba3d930f01f4c3417b66dbba6f6ee94157cb16b2b9181065342ccf443bed83cc5ed7b24ded34cb
  2eaf6c2fd5d7b676d6ae6d66d939cb39472ee40a6d48f6352c94cbc5c17a08083a67b03c1402f2747282c4169faa0b6fab0ca57b4c5be6c786695841ca7115d9
  fee73294094091c33a82bbc0b2183e532570677ff89a8ed1854d2be0672a9667185f288326f0145117078cdda8aff3c349ac32bf6fb6acb6d5626252192231dd
  e6a1ab322e5d9ef035be1e16f89813cca5aed9ba076bf4a658a3565be3d12beb05b16ccff6f4975d2fcf121f2c073ff8267901c63938bdc0e2ddf21437c817ae
  38687079fc2334376e859e87a6c26a57a09d328e22dd4cc0cbd1dca638915576d17218ac23558f9895ba5a3e999ee9e395682dbb3450b2ae46255e6c35980959
  40ae6b72b292671d33b84603a665297f36978bf36659964f06b7b907d8dbc2c31bba480bfdcc199553552b6e52882991b71f10760deb93b333855fa6d0c9f14b
  4ea275597e2126ee04ad1fbc20e19bbad7eaa23535fa03460f19684e0d8bc448d445e5f47bd80a19a2a22e9d69d5b2f98138a27cf20706a4605b4ddc703ecc26
  390185954b0e85a9a1899652bbe3576ea8cfe720bd3b71d60130df5d03c5bd9e58f689a93ed1f31f10e263bffefdf0f7bfabb368058cf7bf2be589fcf7ada0ff
  70fe073c0e15ea6ff2fdcf52b53a2fe71f3e53fcd7f9caec84fe3b899f73ecb2e9a0eb0f7ec3ca73f70f3aa653ae312371c2434257778ccc39b665533071fa6a
  b8ad10efbe48f795ac8e4b47ad9acc4b48451c0eaca6a3cc4b40c4e8fe88ef1479f2505cb2d9a04b36748713d0680b7136e07ac7c427bc0b4477cee8ce4ea93a
  5d29144b0080bc821c66063d6671bf52bb3abafd47471c79b6774f3de23d21f2a11f9aca7921b6d1eb50dffcc3cc4b5660f60e11c8d1e1b61b7a2d535e8a649a
  f27b0823849edefd1c1cccbc00d4777478535e2cc27b8a5dabd5159787a0d6d036e85260e8a8227bf7a0840567341e654d93e7350d959e68ebd1e19a63e0554e
  97ce3d710b2ebe7388c71d567c849da16f879955a2d270a2b1fde41d1f5313574c0ff93551e50605271def762249120ffde0a404aec848f928d228d71f67d44d
  3519a84cded0e2f7afc4755b180e3eac2d1d094898da10d6da4b5dcf6c1f4a725b90d6489f639f437fda33390930431536a8c2065011f282eb4cd3769b3395d6
  79f3825999bf70be552c37cdf3c6854ad3386f9ebf50ad1a25b36854da73b3a50b667906fad3c108f333d87958bd67d6abb0a60e51f97cf4c5ecad6a04fe4ff9
  937be3d8ff78f9df5c657ee0fc9fab4ef0ff9388ffbba68dcb4821ffd45252a87ff02b47fc2d62c72c741b200267e18d751ea2cbc24872c8468bebe631b21fe3
  fc702c0ec7d4a3436211f0722bded345b00a91abfbee2d5bf7fd24fa6cbaae4d0e50f190186aa7bccf4e8ef4f8156a745a3c84601fa59727817746ed7f8a59f3
  3836fe43d27fa5d2fca0fd07aa0426fbff89dbffb074e2bd4fcb28def4f295ef764e8cb0561cb5d012510b137b9b074f2a987e808c388f9c54a0d049e9903b7b
  22ce89f8f634ab8c460008e9e810a80ce165c2f50a8ab8e2f08f0e7918a911ed624da44bc4f5f35100a86147873cc2d4eb00c05b7f74e884bda649a188447f90
  d6e5cef8a80379f9c25b9ca7bbe7e2136f430c9346e6e8907c11b801213ad336f880158e86b0d3f859c1ace6bedeeb033da866a69467d3c542191d82162ae5dc
  c4abe71707fdc763d73dbe03e078fa6f6e10ff976727f1bfbf08f03fa2abe401c0df532700670c153a4c637f0ca158e06ee70bbe9140fa18ac8b6118c191681e
  4b1c1d5208b9f1e8da378e0efd37888ea9a224fe05a0e3d1ea405787512a76b744f8b458983d19743a66ff43a74f6cff03cb5719deffa5c9fe7ff2f73f2ca3d4
  fee7efa9fd0f9f7068b9cf9cf4ee87246d5f6efa11545e75f4f6df27120f7618baea12e081f2815dabbc5d31b7899a993c6c49dfb79af6012981f81ee66e8e51
  1f7be7107df6d8e6fed111731dfb20b1f3fb9e1904079bd0c01c1060c1415ff81ed309d02e697a106578c8cd710ce217185b740e3863295c57b574cf40ae917b
  ad627bbae7a02279080721fd0618c5420e75081fe96dec11cfd202d462f3e839846c34dedc644ccaa31c0ec54b66afdf3df4ad8e83aa53dd098e04382a3c54ac
  93556427bc99d923a68602814272aec07df52f8b0b25ac4cc385f46307e9f5aa081c9c1a8fb53603e48702469831116a9d8488321e1a76734e76d4e25ee87839
  a1f545c75f3ef72f4740668b79f8cdf008eedcef9af25c178f300b1daa77c4e8f0201d0cf5dabe08d5d9b37077a0974335cf9572b5c0340cc81a575d9a9d9e2e
  9764631d935ce1f14838ad56e851f857c3ec9b8e415ef6b853bb6bdbca039d65c3348a0e921c966a96cdc0a845e87cd1335b7a483b4eefe828c760bed9a1b1f2
  a5a3bc10c300f1d8534b2860264f67e479ff61d88267503ad17461b8f8e8883588cd4cec120e8154b1a1a3e6229f4e1593e8e3d88988914a3282df92156020de
  a3420a3ccc48f1884f230ccb60e50a131ca56a65cf62218a700d6bab1da8c1b3da075c90cdf78f5408f39e6be62ba105280855e7aa613276eb34ad6e8403eb4e
  c9c1f3d21b232e536a641763d4d27a5088862feda171837eaea6f011c9d4b9473fe1d40f310cf77d1803e37b13d172f3005d243ae8935088fe093035732cfd91
  42b5c3d407a25b4e7d2832ab34e1e9be34f93fd4323d3602f0d8f80fd5d220fd572d5527f4df934ffff5b93c2f2600c5873407c803c2a6693f0a6b5ee82770d1
  38995e1fc83da9f87c938469e3f839def0614c4a8d2f169e0489d888fd9f8e1df618b0c071f2ff627976f0fe1fba049fecff276eff535ccbc6a01630bda0143e
  18faccb1c226fab7aebb7b6c9dbe73ad180196260d124f0c04b92b0011350647400a5a4c4887d664363b2dad305a689e4766893a45d20b92b515922a402c5b20
  c309ce4f40dd8c574e01f74c63b43d05f9f3d6bae8df35743a34dc68c76be4181f2965705160d27c53996000af18f6c804430f32505f83ea2b31e17f5a7d2973
  cc85f168125f4b484bba50bb1f844d866ec819b2789e69d3840b20c8a72a388509c5f7254effc191d9a083fca4e4fff3b3d561f9dfe4fec71388ff87303f5f4a
  31ca57ef02d773eaac2d2cd312d27f9153dbd593bade223af3bf8f967a257804dcd6008e7d3c6d98b6c143fb70aa6888485c1e16ad71491a0f17e6c7167850f9
  d1e176406ebce945a688b640621f4aa03f7f974ced12323028602867f2a282d1f6793e55f00036be2943a8f7d10c4e4c811023f63d8ce50633190a41539bcebc
  31687dc4feefeb1494f3e4f6ff6c6578ff5727f2ff2f82fd2f9692dafff1bb30f6350c9469a2337f58a9484ed105225ab0312e10a588c0d3f3cc9182a9d1849e
  0efb99a4692e02561b14b6e6a6dade187356658877e0b2b48be53bc9dc0f3c20096dddb947258636e4839aff849051a3f67fead3b4b87af306d0c1b1fcdffc40
  fccf327a809fecff276fffabb5021bc56ded1cf41105d0a7238911462eae1841a492c77c4e94e268249d5c6375b6a46233b164802919216a7023af39bee90578
  fb9d6e992dc76905c23361d0753d40327030bb4ee7704387231d7e8160a9b11514a96fea4e701f956aba65a35aa5ded2fde0f90ebea2d13a60a14582e1d7383a
  02d2012f5ed2337bd1a2d035efc6e02deae315133edd4a7eb9ec991dbc3fb6d4351df571c5b6d88665dba6a73e6d22325a378980c85ca3603e18e7d9b39a6130
  a6052db77fe0e17d56763b7ee47e00ee2014180311aff550866b9d70895facfc1f8ffd6c3cbe3a8eb5ff9a1b8aff395b9de0ff2710ff2783870b84cf03444b44
  2edf38de4e459e8ee9bd745ce751741ee4383a7c9810cf8afcf378894788f09c240c474778e66a0219e6f9a830441fbeb128da27827447ec7f2f741af07a72f6
  5fa5527928fe6b75a2ff7b02f7bf5a3a62f38b77b5fde3778e00ea21b758e1714217e3f09431321045d08987eb6ca3671a797713bf70f701f0853c4de4f01b0f
  6c79c975eff5741e4c34ce1f5a5b24674216323b4377ff0b854266343329aa4ba10d14c32bc3a216f732d034dbdc0688c25a8afb3c21990941e30b4a07402664
  681624c4421c33f8d875e8f9b5e6cb473254a5b0e3496758b60045025969e681e7e4491ddb6da29efe88dc66c8fb9364efd426ac08b5f643af8f41e514261463
  06ec30cc90a186907a16df4beda3f34743867615982e74a01d47d4ef8cc6c35d8a3a75983e21d96abb36f0c030ee3596ed030d8e7e166c1d06b05b6822176d7a
  f8a5ebfa94f24a6899f090c90a3b96025e7acd922e231ba0153abde70aec4537a4ca74db7785f1d7c1802d12de1aa50f5d1309d8230c340b7d24331c7efbb6ef
  b9bb2884d359d7e2963ed862b3d734390b6f3abb1650f8b80c3214fc98474235d06a8d039de146466d71e8e06257233bb4f28e0e97f8f05018d4b6686e36f4ec
  d89c2e0b03b20b63021f5c4fb41f070341658f44285b610c47a7912c886bfa28cf17239c4d7df434419e44cc20c0bea0462b83f3d2f7cc5dcb0d7d9a37127ba4
  2c1d697dd586da7e67b83b5aee081a141f6aafa77ca62dc3c126ddc6a0e798c4863d70432f3db46ae3e26e043e28b4758fa19368e18024b52fc5653cec2945d1
  e4adbdbcb27394f1cc5742d42fe29d695c183df42ab3d735894b8a577a681d25f6422876427ccb59c229f080bb543bad24201d287a2baf85bc95f4d0700ffad9
  ea0a83316a7c26d178e5c1a4ad4819ca4d97c031ca302c40144ffb610b6dcfdaa19d30632f148e0e15eae2322d9ffe726fdab0bd819488e7ec39fa5cab75cca0
  a172103e606a662405326cf830165f4f94865f3cfc1f2090064a30c991fb89dcff2e5539fd57992f972ae4ffa35a9cd07f5f04f2ffd4525254e0e0574e0bf2b0
  dddc3e8393331480020da711be38d662c23005853c898d26e3a812fa977bca906e985026a65b640daeeaf433c930e731a6d3939469cc16de90941669f6cc761b
  400f6b091eae636f11061db1ff03d7b503abdf08ccfdc7630470ecfee7fe7f12fcdf5c059227fbff89dfffc9a5a4b6ffc047befbfde00043b33391c878b81011
  f69d22a9f7fb072c16fc0b249084a5e13f79d88f4ed090560273a37102552df5f84475c10762bb383c455e29604787abf0c8ad0f34c8d8b7f64d1bddfdc4d8e0
  cacec63a571cb65556418a0ee18447eaee84b89afc4c7e263f6fc6cfff071987221c004a0100

Package: pilot2wrappers
File: dev/run_dev.R
Format: text
Content:
  # Set options here
  options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
  
  # Detach all loaded packages and clean your environment
  golem::detach_all_attached()
  # rm(list=ls(all.names = TRUE))
  
  # Document and reload your package
  golem::document_and_reload()
  
  # Run the application
  run_app()

